paths:
  /apps/{app_id}/manifest.yaml:
    get:
      description: Get app manifest
      operationId: getBenchlingAppManifest
      parameters:
      - example: app_e59sjL23Pqn30xHg
        in: path
        name: app_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            text/yaml:
              schema:
                $ref: '#/components/schemas/BenchlingAppManifestAlpha'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get app manifest
      tags:
      - Apps
    put:
      description: Create or update from an app manifest
      operationId: putBenchlingAppManifest
      parameters:
      - example: app_e59sjL23Pqn30xHg
        in: path
        name: app_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          text/yaml:
            schema:
              $ref: '#/components/schemas/BenchlingAppManifestAlpha'
      responses:
        '200':
          content:
            text/yaml:
              schema:
                $ref: '#/components/schemas/BenchlingAppManifestAlpha'
          description: Updated
        '201':
          content:
            text/yaml:
              schema:
                $ref: '#/components/schemas/BenchlingAppManifestAlpha'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: Forbidden
      summary: Create or update from an app manifest
      tags:
      - Apps
  /assemblies/{bulk_assembly_id}:
    get:
      description: Get a bulk assembly by its API identifier.
      operationId: GetAssembly
      parameters:
      - description: API identifier of bulk assembly
        in: path
        name: bulk_assembly_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assembly'
          description: OK
      summary: Get bulk assembly by ID
      tags:
      - Assemblies
  /assemblies:create-and-finalize:
    post:
      description: Create and finalize a new bulk assembly in a single step.
      operationId: CreateAndFinalizeAssembly
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AssemblySpecShared'
              - $ref: '#/components/schemas/AssemblySpecFinalized'
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: 'This endpoint launches a [long-running task](#/Tasks/getTask)
            and returns the Task ID of the launched task.

            The task response contains a [finalized bulk assembly](#components/schemas/Assembly).

            '
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Create and finalize a bulk assembly
      tags:
      - Assemblies
  /assemblies:validate:
    post:
      description: Validate an assembly prior to finalization to see if it will succeed.
      operationId: ValidateAssembly
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssemblySpecShared'
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: 'This endpoint launched a [long-running task](#/Tasks/getTask)
            and returns the Task ID of the launched task.

            The task response contains a set of [validation results](#components/schemas/AssemblyValidationResult).

            '
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Validate a bulk assembly
      tags:
      - Assemblies
  /audit/log/{object_id}:
    post:
      description: 'This endpoint launches a [long-running task](https://benchling.com/api/reference/Tasks/getTask)
        and returns the Task ID of the launched task. The task response contains a
        link to download the exported audit log file from Amazon S3. This endpoint
        is subject to a rate limit of 500 requests per hour, in conjuction with the
        global request rate limit. Export throughput will additionally be rate limited
        around the scale of 70,000 total audit events exported in csv format or 30,000
        total audit events exported in pdf format per hour.

        '
      operationId: auditLog
      parameters:
      - example: seq_yWs5X7lv
        in: path
        name: object_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuditLogExport'
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: Accepted
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Export an audit log file for a Benchling object
      tags:
      - Audit
  /benchling-connect/connection-files:
    get:
      description: List Benchling Connect files
      operationId: listConnectFiles
      parameters:
      - description: 'Number of results to return. Defaults to 50, maximum of 100.

          '
        in: query
        name: pageSize
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
      - description: Token for pagination
        in: query
        name: nextToken
        schema:
          type: string
      - description: 'Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts
          results to those created before the specified time. e.g. < 2017-04-30.

          '
        in: query
        name: createdAt.lt
        schema:
          type: string
      - description: 'Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts
          results to those created after the specified time. e.g. > 2017-04-30.

          '
        in: query
        name: createdAt.gt
        schema:
          type: string
      - description: 'Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts
          results to those created on or before the specified time. e.g. <= 2017-04-30.

          '
        in: query
        name: createdAt.lte
        schema:
          type: string
      - description: 'Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts
          results to those created on or after the specified time. e.g. >= 2017-04-30.

          '
        in: query
        name: createdAt.gte
        schema:
          type: string
      - description: 'Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts
          results to those modified before the specified time. e.g. < 2017-04-30.

          '
        in: query
        name: modifiedAt.lt
        schema:
          type: string
      - description: 'Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts
          results to those modified after the specified time. e.g. > 2017-04-30.

          '
        in: query
        name: modifiedAt.gt
        schema:
          type: string
      - description: 'Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts
          results to those modified on or before the specified time. e.g. <= 2017-04-30.

          '
        in: query
        name: modifiedAt.lte
        schema:
          type: string
      - description: 'Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts
          results to those modified on or after the specified time. e.g. >= 2017-04-30.

          '
        in: query
        name: modifiedAt.gte
        schema:
          type: string
      - description: Name substring of a file. Restricts results to those with names
          that include the provided substring.
        in: query
        name: filenameIncludes
        schema:
          type: string
      - description: Comma-separated list of connection IDs. Restricts results to
          those created by the given connections.
        in: query
        name: connectionIds
        schema:
          items:
            type: string
          type: array
      - description: Comma-separated list of connection schema IDs. Restricts results
          to those created by connections with the given connection schemas.
        in: query
        name: connectionSchemaIds
        schema:
          items:
            type: string
          type: array
      - description: File data type. Restricts results to those with the specified
          data type.
        in: query
        name: dataType
        schema:
          enum:
          - ALLOTROPE
          - GROUP
          - INJECTIONS
          - MEASUREMENT
          - MEASUREMENT_SEPARATE_UNIT_COLUMN
          - ORIGINAL
          - PEAKS
          - PROCESSED
          - REGION
          - SAMPLE
          - SAMPLE_SEPARATE_UNIT_COLUMN
          - STATISTICS
          - TIMESERIES
          - WELL
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionFilesPaginatedList'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad request
      summary: List Benchling Connect files
      tags:
      - Lab Automation
  /collaborations:
    get:
      deprecated: true
      description: 'List all collaborations. Collaboration endpoints are moving to
        beta. Visit the [beta v2 docs](https://benchling.com/api/v2-beta/reference?showLA=true#/Collaborations).

        '
      operationId: listCollaborations
      parameters:
      - description: Comma-separated list of ids of items for which to retrieve collaborations.
        example: src_1234
        in: query
        name: itemIds
        schema:
          type: string
      - description: Type of item for which to retrieve collaborations.
        example: project
        in: query
        name: itemType
        schema:
          enum:
          - connection
          - connection_schema
          - entity_schema
          - enzyme_list
          - feature_library
          - folder
          - legacy_assembly
          - legacy_workflow_template
          - project
          - registry
          - result_schema
          - run_schema
          - saved_search
          - schema_interface
          - template_collection
          - worklist
          type: string
      - description: ID of user for which to retrieve collaborations.
        example: ent_1234
        in: query
        name: userId
        schema:
          type: string
      - description: ID of app for which to retrieve collaborations.
        example: app_1234
        in: query
        name: appId
        schema:
          type: string
      - description: ID of team for which to retrieve collaborations.
        example: team_1234
        in: query
        name: teamId
        schema:
          type: string
      - description: ID of organization for which to retrieve collaborations.
        example: ent_1234
        in: query
        name: organizationId
        schema:
          type: string
      - description: Organization or team membership role for which to retrieve collaborations.
        example: ADMIN
        in: query
        name: role
        schema:
          enum:
          - ADMIN
          - MEMBER
          type: string
      - description: 'Comma-separated list of collaboration ids. Matches all of the
          provided IDs, or returns a 400 error that includes a list of which IDs are
          invalid.

          '
        example: clb_123abc
        in: query
        name: ids
        schema:
          type: string
      - description: 'Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts
          results to those created before the specified time. e.g. < 2017-04-30.

          '
        in: query
        name: createdAt.lt
        schema:
          type: string
      - description: 'Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts
          results to those created after the specified time. e.g. > 2017-04-30.

          '
        in: query
        name: createdAt.gt
        schema:
          type: string
      - description: 'Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts
          results to those modified before the specified time. e.g. < 2017-04-30.

          '
        in: query
        name: modifiedAt.lt
        schema:
          type: string
      - description: 'Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts
          results to those modified after the specified time. e.g. > 2017-04-30.

          '
        in: query
        name: modifiedAt.gt
        schema:
          type: string
      - description: 'Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts
          results to those modified on or before the specified time. e.g. <= 2017-04-30.

          '
        in: query
        name: modifiedAt.lte
        schema:
          type: string
      - description: 'Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts
          results to those modified on or after the specified time. e.g. >= 2017-04-30.

          '
        in: query
        name: modifiedAt.gte
        schema:
          type: string
      - description: Number of collaborations to return. Defaults to 50, maximum of
          100.
        in: query
        name: pageSize
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
      - description: Token for pagination
        in: query
        name: nextToken
        schema:
          type: string
      - description: Method by which to order search results. Valid sort method is
          modifiedAt (modified time, most recent first). Optionally add :asc or :desc
          to specify ascending or descending order. Default is modifiedAt:desc.
        in: query
        name: sort
        schema:
          default: modifiedAt
          enum:
          - modifiedAt
          - modifiedAt:asc
          - modifiedAt:desc
          nullable: false
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollaborationsPaginatedList'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List all collaborations
      tags:
      - Collaborations
  /collaborations/{collaborationId}:
    get:
      deprecated: true
      description: Get a collaboration by ID. Collaboration endpoints are moving to
        beta. Visit the [beta v2 docs](https://benchling.com/api/v2-beta/reference?showLA=true#/Collaborations).
      operationId: getCollaboration
      parameters:
      - description: ID of collaboration to get
        example: clb_1234
        in: path
        name: collaborationId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collaboration'
          description: OK
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get a collaboration by ID
      tags:
      - Collaborations
  /dna-oligos:
    get:
      deprecated: true
      description: 'List DNA Oligos with HELM Deprecated as HELM support is now in
        stable.

        '
      operationId: listDNAOligosHelm
      parameters:
      - description: 'Number of results to return. Defaults to 50, maximum of 100.

          '
        in: query
        name: pageSize
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
      - description: Token for pagination
        in: query
        name: nextToken
        schema:
          type: string
      - in: query
        name: sort
        schema:
          default: modifiedAt:desc
          description: 'Method by which to order search results. Valid sorts are modifiedAt
            (modified time, most recent first) and name (entity name, alphabetical).
            Optionally add :asc or :desc to specify ascending or descending order.

            '
          enum:
          - modifiedAt
          - modifiedAt:asc
          - modifiedAt:desc
          - name
          - name:asc
          - name:desc
          nullable: false
          type: string
      - description: 'Datetime, in RFC 3339 format. Supports the > and < operators.
          Time zone defaults to UTC. Restricts results to those modified in the specified
          range. e.g. > 2017-04-30. Date ranges can be specified with the following
          nomenclature > YYYY-MM-DD AND <YYYY-MM-DD.

          '
        examples:
          and-range:
            summary: Filter for all models modified within a certain range using the
              AND operator.
            value: '> 2022-03-01 AND < 2022-04-01'
          full-rfc-3339-format:
            summary: Filter for modified models using the full RFC 3339 format
            value: '> 2020-12-31T21:07:14-05:00'
          greater-than-example:
            summary: Filter for all models modified after a certain date
            value: '> 2022-03-01'
        in: query
        name: modifiedAt
        schema:
          type: string
      - description: Name of a DNA Oligo. Restricts results to those with the specified
          name, alias, or entity registry ID.
        in: query
        name: name
        schema:
          type: string
      - description: Name substring of a DNA Oligo. Restricts results to those with
          names, aliases, or entity registry IDs that include the provided substring.
        in: query
        name: nameIncludes
        schema:
          type: string
      - description: 'Full bases of the DNA Oligo. Restricts results to those with
          the specified bases, case-insensitive, allowing for circular or reverse
          complement matches. Does not allow partial matching or loose matching via
          degenerate bases.

          '
        in: query
        name: bases
        schema:
          type: string
      - description: ID of a folder. Restricts results to those in the folder.
        in: query
        name: folderId
        schema:
          type: string
      - description: 'Comma-separated list of entry IDs. Restricts results to DNA
          Oligos mentioned in those entries.

          '
        explode: false
        in: query
        name: mentionedIn
        schema:
          items:
            type: string
          type: array
      - description: ID of a project. Restricts results to those in the project.
        in: query
        name: projectId
        schema:
          type: string
      - description: 'ID of a registry. Restricts results to those registered in this
          registry. Specifying "null" returns unregistered items.

          '
        in: query
        name: registryId
        schema:
          nullable: true
          type: string
      - description: 'ID of a schema. Restricts results to those of the specified
          schema.

          '
        in: query
        name: schemaId
        schema:
          type: string
      - description: 'Schema field value. For Integer, Float, and Date type fields,
          supports the >= and <= operators. If present, the schemaId param must also
          be present. Restricts results to those with a field of whose value matches
          the filter.

          '
        in: query
        name: schemaFields
        schema:
          $ref: '#/components/schemas/SchemaFieldsQueryParam'
      - description: "Archive reason. Restricts results to those with the specified\
          \ archive reason. Use \u201CNOT_ARCHIVED\u201D to filter for unarchived\
          \ DNA Oligos.\n"
        in: query
        name: archiveReason
        schema:
          type: string
      - description: 'Comma-separated list of item IDs. Restricts results to those
          that mention the given items in the description.

          '
        explode: false
        in: query
        name: mentions
        schema:
          items:
            type: string
          type: array
      - description: 'Comma-separated list of ids. Matches all of the provided IDs,
          or returns a 400 error that includes a list of which IDs are invalid.

          '
        in: query
        name: ids
        schema:
          example: seq_yWs5X7lv,seq_RhYGVnHF
          type: string
      - description: 'Comma-separated list of entity registry IDs. Restricts results
          to those that match any of the specified registry IDs.

          '
        in: query
        name: entityRegistryIds.anyOf
        schema:
          example: TP001,TP002
          type: string
      - description: 'Comma-separated list of names. Restricts results to those that
          match any of the specified names, aliases, or entity registry IDs, case
          insensitive.  Warning - this filter can be non-performant due to case insensitivity.

          '
        in: query
        name: names.anyOf
        schema:
          example: MyName1, MyName2
          type: string
      - description: 'Comma-separated list of names. Restricts results to those that
          match any of the specified names, aliases, or entity registry IDs, case
          sensitive.

          '
        in: query
        name: names.anyOf.caseSensitive
        schema:
          example: MyName1,MyName2
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnaOligosPaginatedListHelm'
          description: OK
          headers:
            Result-Count:
              description: The total number of items that match the given query
              schema:
                type: integer
            x-rate-limit-limit:
              description: The number of allowed requests in the current rate-limit
                period
              schema:
                type: integer
            x-rate-limit-remaining:
              description: The number of requests remaining in the current rate-limit
                period
              schema:
                type: integer
            x-rate-limit-reset:
              description: The number of seconds remaining in the current rate-limit
                period
              schema:
                type: integer
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List DNA Oligos
      tags:
      - DNA Oligos
    post:
      deprecated: true
      description: 'Create a DNA Oligo with optional HELM Deprecated as HELM support
        is now in stable.

        '
      operationId: createDNAOligoWithHelm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OligoCreateHelm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnaOligoHelm'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Create a DNA Oligo
      tags:
      - DNA Oligos
  /dna-oligos/{oligo_id}:
    get:
      deprecated: true
      description: 'Get a DNA Oligo with HELM Deprecated as HELM support is now in
        stable.

        '
      operationId: getDNAOligoHelm
      parameters:
      - in: path
        name: oligo_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnaOligoHelm'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Get a DNA Oligo
      tags:
      - DNA Oligos
    patch:
      deprecated: true
      description: 'Update a DNA Oligo with optional HELM Deprecated as HELM support
        is now in stable.

        '
      operationId: updateDNAOligoHelm
      parameters:
      - in: path
        name: oligo_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OligoUpdateHelm'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnaOligoHelm'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Update a DNA Oligo
      tags:
      - DNA Oligos
  /dna-oligos:bulk-create:
    post:
      deprecated: true
      description: 'Bulk Create DNA Oligos with optional HELM Deprecated as HELM support
        is now in stable.

        '
      operationId: bulkCreateDNAOligosHelm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnaOligosBulkCreateRequestHelm'
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: Accepted
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Bulk Create DNA Oligos
      tags:
      - DNA Oligos
  /entity-schemas:
    get:
      description: List entity schemas
      operationId: listEntitySchemas
      parameters:
      - in: query
        name: nextToken
        schema:
          type: string
      - in: query
        name: pageSize
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
      - description: 'Datetime, in RFC 3339 format. Supports the > and < operators.
          Time zone defaults to UTC. Restricts results to those modified in the specified
          range. e.g. > 2017-04-30. Date ranges can be specified with the following
          nomenclature > YYYY-MM-DD AND <YYYY-MM-DD.

          '
        examples:
          and-range:
            summary: Filter for all models modified within a certain range using the
              AND operator.
            value: '> 2022-03-01 AND < 2022-04-01'
          full-rfc-3339-format:
            summary: Filter for modified models using the full RFC 3339 format
            value: '> 2020-12-31T21:07:14-05:00'
          greater-than-example:
            summary: Filter for all models modified after a certain date
            value: '> 2022-03-01'
        in: query
        name: modifiedAt
        schema:
          type: string
      - description: 'ID of a registry. Restricts results to schemas in this registry.

          '
        in: query
        name: registryId
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitySchemasPaginatedList'
          description: OK
          headers:
            Result-Count:
              description: The total number of schemas that match the given query
              schema:
                type: integer
            x-rate-limit-limit:
              description: The number of allowed requests in the current rate-limit
                period
              schema:
                type: integer
            x-rate-limit-remaining:
              description: The number of calls remaining in the current rate-limit
                period
              schema:
                type: integer
            x-rate-limit-reset:
              description: The number of seconds remaining in the current rate-limit
                period
              schema:
                type: integer
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List entity schemas
      tags:
      - Schemas
    post:
      description: Create an entity schema
      operationId: createEntitySchema
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntitySchemaCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitySchema'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Create an entity schema
      tags:
      - Schemas
  /entity-schemas/{schema_id}:
    get:
      description: Get an entity schema by ID
      operationId: getEntitySchema
      parameters:
      - description: ID of schema to get
        in: path
        name: schema_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitySchema'
          description: OK
        '400':
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get an entity schema by ID
      tags:
      - Schemas
  /entries:
    get:
      description: List notebook entries
      operationId: listEntries
      parameters:
      - description: Number of results to return. Defaults to 50, maximum of 100.
        in: query
        name: pageSize
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
      - description: Token for pagination
        in: query
        name: nextToken
        schema:
          type: string
      - description: 'Method by which to order search results. Valid sorts are modifiedAt
          (modified time, most recent first) and name (entity name, alphabetical).
          Optionally add :asc or :desc to specify ascending or descending order.

          '
        in: query
        name: sort
        schema:
          default: modifiedAt:desc
          enum:
          - modifiedAt
          - modifiedAt:asc
          - modifiedAt:desc
          - name
          - name:asc
          - name:desc
          nullable: false
          type: string
      - description: 'Datetime, in RFC 3339 format. Supports the > and < operators.
          Time zone defaults to UTC. Restricts results to those modified in the specified
          range. e.g. > 2017-04-30. Date ranges can be specified with the following
          nomenclature > YYYY-MM-DD AND <YYYY-MM-DD.

          '
        examples:
          and-range:
            summary: Filter for all models modified within a certain range using the
              AND operator.
            value: '> 2022-03-01 AND < 2022-04-01'
          full-rfc-3339-format:
            summary: Filter for modified models using the full RFC 3339 format
            value: '> 2020-12-31T21:07:14-05:00'
          greater-than-example:
            summary: Filter for all models modified after a certain date
            value: '> 2022-03-01'
        in: query
        name: modifiedAt
        schema:
          type: string
      - description: Name of an Entry. Restricts results to those with the specified
          name.
        in: query
        name: name
        schema:
          type: string
      - description: ID of a project. Restricts results to those in the project.
        in: query
        name: projectId
        schema:
          type: string
      - description: 'Archive reason. Restricts items to those with the specified
          archive reason. Use "NOT_ARCHIVED" to filter for unarchived entries. Use
          "ANY_ARCHIVED" to filter for archived entries regardless of reason. Use
          "ANY_ARCHIVED_OR_NOT_ARCHIVED" to return items for both archived and unarchived.

          '
        examples:
          1_not_archived:
            summary: Only include unarchived items (default).
            value: NOT_ARCHIVED
          2_archived_reason:
            summary: Includes items archived for a specific reason.
            value: Retired
          3_any_archived:
            summary: Includes items archived for any reason.
            value: ANY_ARCHIVED
          4_any_archived_or_not_archived:
            summary: Includes both archived and unarchived items.
            value: ANY_ARCHIVED_OR_NOT_ARCHIVED
        in: query
        name: archiveReason
        schema:
          type: string
      - description: 'Restrict results to those with the given review status. Supported
          statuses: IN_PROGRESS, ACCEPTED, REJECTED, NEEDS_REVIEW, RETRACTED

          '
        in: query
        name: reviewStatus
        schema:
          enum:
          - IN_PROGRESS
          - ACCEPTED
          - REJECTED
          - NEEDS_REVIEW
          - RETRACTED
          type: string
      - description: 'Comma-separated list of entry IDs. Restricts results to those
          mentioned within the entries in this list.

          '
        in: query
        name: mentionedIn
        schema:
          type: string
      - description: 'Comma-separated list of resource IDs. Restricts results to entries
          that mention the given items.

          '
        in: query
        name: mentions
        schema:
          type: string
      - description: 'Comma-separated list of ids. Matches all of the provided IDs,
          or returns a 400 error that includes a list of which IDs are invalid.

          '
        in: query
        name: ids
        schema:
          type: string
      - description: 'ID of a schema. Restricts results to those of the specified
          schema.

          '
        in: query
        name: schemaId
        schema:
          type: string
      - description: 'Comma-separated list of names. Restricts results to those that
          match any of the specified names, case insensitive.  Warning - this filter
          can be non-performant due to case insensitivity.

          '
        in: query
        name: names.anyOf
        schema:
          example: MyName1,MyName2
          type: string
      - description: 'Comma-separated list of names. Restricts results to those that
          match any of the specified names, case sensitive.

          '
        in: query
        name: names.anyOf.caseSensitive
        schema:
          example: MyName1,MyName2
          type: string
      - description: Comma-separated list of ids. Restricts results to entries that
          have assignees of any of the specified ids.
        in: query
        name: assignedReviewerIds.anyOf
        schema:
          example: ent_a0SApq3z,ent_SdUvia1v
          type: string
      - description: Comma separated list of users IDs
        in: query
        name: creatorIds
        schema:
          example: ent_a0SApq3z
          type: string
      - description: Comma separated list of user or app IDs
        in: query
        name: authorIds.anyOf
        schema:
          example: ent_a0SApq3z,ent_b4AApz9b
          type: string
      - description: Comma-separated list of Entry Display IDs.
        in: query
        name: displayIds
        schema:
          example: VPR001,VPR002
          type: string
      - description: 'Comma-separated list of fields to return. Modifies the output
          shape. To return all keys at a given level, enumerate them or use the wildcard,
          ''*''. For more information, [click here](https://docs.benchling.com/docs/getting-started-1#returning-query-parameter).


          **Note:** "entries.days.notes" cannot be introspected with the returning
          parameter, and any sub fields will be ignored. E.g., "entries.days.notes.text"
          will return the same model as "entries.days.notes".

          '
        in: query
        name: returning
        schema:
          example: entries.id, entries.name, entries.modifiedAt
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntriesPaginatedList'
          description: 'Returns a list of entries. Entries are notes that users can
            take. They''re organized by "days" (which are user-configurable) and modeled
            within each day as a list of "notes." Each note has a type - the simplest
            is a "text" type, but lists, tables, and external files are also supported.


            *Note:* the current Entry resource has a few limitations:

            - Formatting information is not yet supported. Header formatting, bolding,
            and other stylistic information is not presented.

            - Data in tables is presented as text always - numeric values will need
            to be parsed into floats or integers, as appropriate.


            Note: Data in Results tables are not accessible through this API call.
            Results table data can be called through the Results API calls.

            '
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List entries
      tags:
      - Entries
    post:
      description: 'Create a notebook entry with optional attachments. Attachments
        will be placed into the entry body in the order they are specified.

        '
      operationId: createEntryWithAttachments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntryCreateAttachments'
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: Accepted
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Create a notebook entry
      tags:
      - Entries
  /entries/{entry_id}:
    get:
      description: Get a notebook entry by ID
      operationId: getEntry
      parameters:
      - description: ID of the entry
        in: path
        name: entry_id
        required: true
        schema:
          type: string
      - description: 'Comma-separated list of fields to return. Modifies the output
          shape. To return all keys at a given level, enumerate them or use the wildcard,
          ''*''. For more information, [click here](https://docs.benchling.com/docs/getting-started-1#returning-query-parameter).


          **Note:** "days.notes" cannot be introspected with the returning parameter,
          and any sub fields will be ignored. E.g., "days.notes.text" will return
          the same model as "days.notes".

          '
        in: query
        name: returning
        schema:
          example: id, name, modifiedAt
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntryById'
          description: 'Returns a single entry. Entries are notes that users can take.
            They''re organized by "days" (which are user-configurable) and modeled
            within each day as a list of "notes." Each note has a type - the simplest
            is a "text" type, but lists, tables, and external files are also supported.


            *Note:* the current Entry resource has a few limitations:

            - Formatting information is not yet supported. Header formatting, bolding,
            and other stylistic information is not presented.

            - Data in tables is presented as text always - numeric values will need
            to be parsed into floats or integers, as appropriate.


            Note: Data in Results tables are not accessible through this API call.
            Results table data can be called through the Results API calls.

            '
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get a notebook entry by ID
      tags:
      - Entries
  /entries:bulk-create:
    post:
      description: 'Bulk create notebook entries with optional attachments. Limit
        of 100 Entries per request. Attachments will be placed into the entry body
        in the order they are specified.

        '
      operationId: bulkCreateEntries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkCreateEntriesRequest'
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskLink'
          description: Accepted
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Bulk create notebook entries
      tags:
      - Entries
  /entry-templates/{entry_template_id}:
    get:
      description: Get a notebook template entry by ID
      operationId: getTemplateEntry
      parameters:
      - description: ID of the entry template
        in: path
        name: entry_template_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntryTemplate'
          description: 'Returns a single entry template. Entry templates are templates
            that users can base new notebook entries off of. '
      summary: Get a notebook template entry by ID
      tags:
      - Entries
  /folders/{folderId}/collaborations:
    get:
      deprecated: true
      description: 'Returns information about collaborations on the specified Folders.
        Collaboration endpoints are moving to beta. Visit the [beta v2 docs](https://benchling.com/api/v2-beta/reference?showLA=true#/Folders).

        '
      operationId: listFolderCollaborations
      parameters:
      - description: ID of folder for which to retrieve collaborations.
        example: lib_1234
        in: path
        name: folderId
        required: true
        schema:
          type: string
      - description: ID of user for which to retrieve collaborations.
        example: ent_1234
        in: query
        name: userId
        schema:
          type: string
      - description: ID of app for which to retrieve collaborations.
        example: app_1234
        in: query
        name: appId
        schema:
          type: string
      - description: ID of team for which to retrieve collaborations.
        example: team_1234
        in: query
        name: teamId
        schema:
          type: string
      - description: ID of organization for which to retrieve collaborations.
        example: ent_1234
        in: query
        name: organizationId
        schema:
          type: string
      - description: Organization or team membership role for which to retrieve collaborations.
        example: MEMBER
        in: query
        name: role
        schema:
          enum:
          - ADMIN
          - MEMBER
          type: string
      - description: 'Comma-separated list of collaboration ids. Matches all of the
          provided IDs, or returns a 400 error that includes a list of which IDs are
          invalid.

          '
        example: clb_1234
        in: query
        name: ids
        schema:
          type: string
      - description: 'Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts
          results to those created before the specified time. e.g. < 2017-04-30.

          '
        in: query
        name: createdAt.lt
        schema:
          type: string
      - description: 'Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts
          results to those created after the specified time. e.g. > 2017-04-30.

          '
        in: query
        name: createdAt.gt
        schema:
          type: string
      - description: 'Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts
          results to those modified before the specified time. e.g. < 2017-04-30.

          '
        in: query
        name: modifiedAt.lt
        schema:
          type: string
      - description: 'Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts
          results to those modified after the specified time. e.g. > 2017-04-30.

          '
        in: query
        name: modifiedAt.gt
        schema:
          type: string
      - description: 'Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts
          results to those modified on or before the specified time. e.g. <= 2017-04-30.

          '
        in: query
        name: modifiedAt.lte
        schema:
          type: string
      - description: 'Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts
          results to those modified on or after the specified time. e.g. >= 2017-04-30.

          '
        in: query
        name: modifiedAt.gte
        schema:
          type: string
      - description: Number of collaborations to return. Defaults to 50, maximum of
          100.
        in: query
        name: pageSize
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
      - description: Token for pagination
        in: query
        name: nextToken
        schema:
          type: string
      - description: Method by which to order search results. Valid sort method is
          modifiedAt (modified time, most recent first). Optionally add :asc or :desc
          to specify ascending or descending order. Default is modifiedAt:desc.
        in: query
        name: sort
        schema:
          default: modifiedAt
          enum:
          - modifiedAt
          - modifiedAt:asc
          - modifiedAt:desc
          nullable: false
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollaborationsPaginatedList'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: List folder collaborations
      tags:
      - Folders
  /form-definitions:
    get:
      description: 'Lists available form definitions. Only the latest version along
        is returned for each definition.

        '
      operationId: getFormDefinitions
      parameters:
      - description: Token for pagination
        in: query
        name: nextToken
        schema:
          type: string
      - in: query
        name: pageSize
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
      - description: 'Datetime, in RFC 3339 format. Supports the > and < operators.
          Time zone defaults to UTC. Restricts results to those modified in the specified
          range. e.g. > 2017-04-30. Date ranges can be specified with the following
          nomenclature > YYYY-MM-DD AND <YYYY-MM-DD.

          '
        examples:
          and-range:
            summary: Filter for all models modified within a certain range using the
              AND operator.
            value: '> 2022-03-01 AND < 2022-04-01'
          full-rfc-3339-format:
            summary: Filter for modified models using the full RFC 3339 format
            value: '> 2020-12-31T21:07:14-05:00'
          greater-than-example:
            summary: Filter for all models modified after a certain date
            value: '> 2022-03-01'
        in: query
        name: modifiedAt
        schema:
          type: string
      - in: query
        name: sort
        schema:
          default: modifiedAt:desc
          description: 'Sets the sort-order of the response. Valid sorts are modifiedAt
            (modified time, most recent first). Optionally add :asc or :desc to specify
            ascending or descending order.

            '
          enum:
          - modifiedAt
          - modifiedAt:asc
          - modifiedAt:desc
          nullable: false
          type: string
      - description: Comma-separated list of fields to return. Modifies the output
          shape. To return all keys at a given level, enumerate them or use the wildcard,
          '*'. For more information, [click here](https://docs.benchling.com/docs/getting-started-1#returning-query-parameter).
        in: query
        name: returning
        schema:
          example: formDefinitions.id,formDefinitions.modifiedAt
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormDefinitionsPaginatedList'
          description: OK
      summary: 'Lists all available form definitions

        '
      tags:
      - Forms
  /form-definitions/{form_definition_id}:
    get:
      description: 'Get a specific form definition. Only the latest version is returned

        '
      operationId: getFormDefinition
      parameters:
      - description: API ID of the specific form definition desired
        in: path
        name: form_definition_id
        required: true
        schema:
          example: fmdef_W7KgYydE
          type: string
      - description: Comma-separated list of fields to return. Modifies the output
          shape. To return all keys at a given level, enumerate them or use the wildcard,
          '*'. For more information, [click here](https://docs.benchling.com/docs/getting-started-1#returning-query-parameter).
        in: query
        name: returning
        schema:
          example: id,modifiedAt
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormDefinition'
          description: OK
        '404':
          description: Not Found
      summary: 'Get a specific form definition

        '
      tags:
      - Forms
  /general-access-policies:
    get:
      description: Returns a list of general (project/registry) access policies.
      operationId: listGeneralAccessPolicies
      parameters:
      - in: query
        name: nextToken
        schema:
          type: string
      - in: query
        name: pageSize
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPoliciesPaginatedList'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List general access policies
      tags:
      - Access Policies
  /general-access-policies/{policy_id}:
    get:
      description: Returns a general (project/registry) policy by ID.
      operationId: getGeneralAccessPolicy
      parameters:
      - description: ID of policy to get
        in: path
        name: policy_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPolicy'
          description: OK
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get a general access policy by ID
      tags:
      - Access Policies
  /projects/{projectId}/collaborations:
    get:
      deprecated: true
      description: 'Returns information about collaborations on the specified project.
        Collaboration endpoints are moving to beta. Visit the [beta v2 docs](https://benchling.com/api/v2-beta/reference?showLA=true#/Projects).

        '
      operationId: listProjectCollaborations
      parameters:
      - description: ID of project for which to retrieve collaborations.
        example: src_1234
        in: path
        name: projectId
        required: true
        schema:
          type: string
      - description: ID of user for which to retrieve collaborations.
        example: ent_1234
        in: query
        name: userId
        schema:
          type: string
      - description: ID of app for which to retrieve collaborations.
        example: app_1234
        in: query
        name: appId
        schema:
          type: string
      - description: ID of team for which to retrieve collaborations.
        example: team_1234
        in: query
        name: teamId
        schema:
          type: string
      - description: ID of organization for which to retrieve collaborations.
        example: ent_1234
        in: query
        name: organizationId
        schema:
          type: string
      - description: Organization or team membership role for which to retrieve collaborations.
        example: MEMBER
        in: query
        name: role
        schema:
          enum:
          - ADMIN
          - MEMBER
          type: string
      - description: 'Comma-separated list of collaboration ids. Matches all of the
          provided IDs, or returns a 400 error that includes a list of which IDs are
          invalid.

          '
        example: clb_1234
        in: query
        name: ids
        schema:
          type: string
      - description: 'Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts
          results to those created before the specified time. e.g. < 2017-04-30.

          '
        in: query
        name: createdAt.lt
        schema:
          type: string
      - description: 'Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts
          results to those created after the specified time. e.g. > 2017-04-30.

          '
        in: query
        name: createdAt.gt
        schema:
          type: string
      - description: 'Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts
          results to those modified before the specified time. e.g. < 2017-04-30.

          '
        in: query
        name: modifiedAt.lt
        schema:
          type: string
      - description: 'Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts
          results to those modified after the specified time. e.g. > 2017-04-30.

          '
        in: query
        name: modifiedAt.gt
        schema:
          type: string
      - description: 'Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts
          results to those modified on or before the specified time. e.g. <= 2017-04-30.

          '
        in: query
        name: modifiedAt.lte
        schema:
          type: string
      - description: 'Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts
          results to those modified on or after the specified time. e.g. >= 2017-04-30.

          '
        in: query
        name: modifiedAt.gte
        schema:
          type: string
      - description: Number of collaborations to return. Defaults to 50, maximum of
          100.
        in: query
        name: pageSize
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
      - description: Token for pagination
        in: query
        name: nextToken
        schema:
          type: string
      - description: Method by which to order search results. Valid sort method is
          modifiedAt (modified time, most recent first). Optionally add :asc or :desc
          to specify ascending or descending order. Default is modifiedAt:desc.
        in: query
        name: sort
        schema:
          default: modifiedAt
          enum:
          - modifiedAt
          - modifiedAt:asc
          - modifiedAt:desc
          nullable: false
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollaborationsPaginatedList'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: List project collaborations
      tags:
      - Projects
  /schema-access-policies:
    get:
      description: Returns a list of schema access policies.
      operationId: listSchemaAccessPolicies
      parameters:
      - in: query
        name: nextToken
        schema:
          type: string
      - in: query
        name: pageSize
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPoliciesPaginatedList'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List schema access policies
      tags:
      - Access Policies
  /schema-access-policies/{policy_id}:
    get:
      description: Returns a schema access policy by ID.
      operationId: getSchemaAccessPolicy
      parameters:
      - description: ID of policy to get
        in: path
        name: policy_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPolicy'
          description: OK
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get a schema access policy by ID
      tags:
      - Access Policies
  /schema-classes:
    get:
      description: List schema classes
      operationId: listSchemaClasses
      parameters:
      - in: query
        name: nextToken
        schema:
          type: string
      - in: query
        name: pageSize
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
      - description: 'Datetime, in RFC 3339 format. Supports the > and < operators.
          Time zone defaults to UTC. Restricts results to those modified in the specified
          range. e.g. > 2017-04-30. Date ranges can be specified with the following
          nomenclature > YYYY-MM-DD AND <YYYY-MM-DD.

          '
        examples:
          and-range:
            summary: Filter for all models modified within a certain range using the
              AND operator.
            value: '> 2022-03-01 AND < 2022-04-01'
          full-rfc-3339-format:
            summary: Filter for modified models using the full RFC 3339 format
            value: '> 2020-12-31T21:07:14-05:00'
          greater-than-example:
            summary: Filter for all models modified after a certain date
            value: '> 2022-03-01'
        in: query
        name: modifiedAt
        schema:
          type: string
      - description: 'Comma separated list of bioentity IDs. Returns schema classes
          where the schema class is implemented by all of the provided items.

          '
        in: query
        name: SchemaIds.allOf
        schema:
          example: bfi_ed1ef7,con_1c76c9
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaClassesPaginatedList'
          description: OK
          headers:
            Result-Count:
              description: The total number of schema classes that match the given
                query
              schema:
                type: integer
            x-rate-limit-limit:
              description: The number of allowed requests in the current rate-limit
                period
              schema:
                type: integer
            x-rate-limit-remaining:
              description: The number of calls remaining in the current rate-limit
                period
              schema:
                type: integer
            x-rate-limit-reset:
              description: The number of seconds remaining in the current rate-limit
                period
              schema:
                type: integer
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: List schema classes
      tags:
      - Schemas
  /schemas-classes/{schema_class_id}:
    get:
      description: Get a schema class by ID
      operationId: getSchemaClass
      parameters:
      - description: ID of schema class to get
        in: path
        name: schema_class_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaClass'
          description: OK
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get a schema class by id
      tags:
      - Schemas
  /stage-entries/{stage_entry_id}:
    get:
      description: Get a stage entry by ID
      operationId: getStageEntry
      parameters:
      - description: ID of the stage entry
        in: path
        name: stage_entry_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StageEntry'
          description: OK
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: Get a stage entry by ID
      tags:
      - Legacy Workflows
  /stage-entries/{stage_entry_id}/external-files/{external_file_id}:
    get:
      description: 'Retrieves the metadata for an external file. Use the ''downloadURL''
        to download the actual file. (Expand the schema view for details)

        '
      operationId: getExternalFileMetadata
      parameters:
      - description: ID of the legacy workflow stage entry the file was uploaded to
        in: path
        name: stage_entry_id
        required: true
        schema:
          type: string
      - description: ID of the external file
        in: path
        name: external_file_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntryExternalFileById'
          description: OK
      summary: 'Retrieves the metadata for an external file. Use the ''downloadURL''
        to download the actual file.

        '
      tags:
      - Legacy Workflows
  /studies:
    get:
      description: List Studies
      operationId: listStudies
      parameters:
      - description: 'Number of results to return. Defaults to 50, maximum of 100.

          '
        in: query
        name: pageSize
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
      - description: Token for pagination
        in: query
        name: nextToken
        schema:
          type: string
      - in: query
        name: sort
        schema:
          default: modifiedAt:desc
          description: 'Method by which to order search results. Valid sorts are modifiedAt
            (modified time, most recent first) and name (entity name, alphabetical).
            Optionally add :asc or :desc to specify ascending or descending order.

            '
          enum:
          - modifiedAt
          - modifiedAt:asc
          - modifiedAt:desc
          - name
          - name:asc
          - name:desc
          nullable: false
          type: string
      - description: 'Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts
          results to those created before the specified time. e.g. < 2017-04-30.

          '
        in: query
        name: createdAt.lt
        schema:
          type: string
      - description: 'Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts
          results to those created after the specified time. e.g. > 2017-04-30.

          '
        in: query
        name: createdAt.gt
        schema:
          type: string
      - description: 'Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts
          results to those created on or before the specified time. e.g. <= 2017-04-30.

          '
        in: query
        name: createdAt.lte
        schema:
          type: string
      - description: 'Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts
          results to those created on or after the specified time. e.g. >= 2017-04-30.

          '
        in: query
        name: createdAt.gte
        schema:
          type: string
      - description: 'Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts
          results to those modified before the specified time. e.g. < 2017-04-30.

          '
        in: query
        name: modifiedAt.lt
        schema:
          type: string
      - description: 'Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts
          results to those modified after the specified time. e.g. > 2017-04-30.

          '
        in: query
        name: modifiedAt.gt
        schema:
          type: string
      - description: 'Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts
          results to those modified on or before the specified time. e.g. <= 2017-04-30.

          '
        in: query
        name: modifiedAt.lte
        schema:
          type: string
      - description: 'Datetime, in RFC 3339 format. Time zone defaults to UTC. Restricts
          results to those modified on or after the specified time. e.g. >= 2017-04-30.

          '
        in: query
        name: modifiedAt.gte
        schema:
          type: string
      - description: Name of a Study. Restricts results to those with the specified
          name, alias, or entity registry ID.
        in: query
        name: name
        schema:
          type: string
      - description: Name substring of a Study. Restricts results to those with names
          that include the provided substring.
        in: query
        name: nameIncludes
        schema:
          type: string
      - description: ID of a folder. Restricts results to those in the folder.
        in: query
        name: folderId
        schema:
          type: string
      - description: ID of a project. Restricts results to those in the project.
        in: query
        name: projectId
        schema:
          type: string
      - description: 'ID of a schema. Restricts results to those of the specified
          schema.

          '
        in: query
        name: schemaId
        schema:
          type: string
      - description: "Archive reason. Restricts results to those with the specified\
          \ archive reason. Use \u201CNOT_ARCHIVED\u201D to filter for unarchived\
          \ Studies. Use \"ANY_ARCHIVED\" to filter for archived Molecules regardless\
          \ of reason. Use \"ANY_ARCHIVED_OR_NOT_ARCHIVED\" to return items for both\
          \ archived and unarchived.\n"
        examples:
          any_archived:
            summary: Includes items archived for any reason.
            value: ANY_ARCHIVED
          any_archived_or_not_archived:
            summary: Includes both archived and unarchived items.
            value: ANY_ARCHIVED_OR_NOT_ARCHIVED
          arhived_reason:
            summary: Includes items archived for a specific reason.
            value: Retired
          not_archived:
            summary: Only include unarchived items (default).
            value: NOT_ARCHIVED
        in: query
        name: archiveReason
        schema:
          type: string
      - description: 'Comma-separated list of ids. Matches all of the provided IDs,
          or returns a 400 error that includes a list of which IDs are invalid.

          '
        in: query
        name: ids
        schema:
          example: stdy_yWs5X7lv,stdy_RhYGVnHF
          type: string
      - description: 'Comma-separated list of names. Maximum of 100. Restricts results
          to those that match any of the specified names.

          '
        in: query
        name: names.anyOf
        schema:
          example: MyName1,MyName2
          type: string
      - description: 'Comma-separated list of app names. Maximum of 100. Restricts
          results to those that match any of the specified names, case sensitive.

          '
        in: query
        name: names.anyOf.caseSensitive
        schema:
          example: MyName1,MyName2
          type: string
      - description: Comma separated list of user or app IDs. Maximum of 100.
        in: query
        name: authorIds.anyOf
        schema:
          example: ent_a0SApq3z,ent_b4AApz9b
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudiesPaginatedList'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad request
      summary: List Studies
      tags:
      - Studies
    post:
      description: 'Create a Study.

        '
      operationId: createStudy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudyCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Study'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Create a Study
      tags:
      - Studies
  /studies/{study_id}:
    get:
      description: Get a Study
      operationId: getStudy
      parameters:
      - in: path
        name: study_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Study'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not found
      summary: Get a Study
      tags:
      - Studies
    patch:
      description: Update a Study
      operationId: updateStudy
      parameters:
      - description: The ID of the study
        in: path
        name: study_id
        required: true
        schema:
          example: stdy_OnnsW08k
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudyUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Study'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not found
      summary: Update a Study
      tags:
      - Studies
  /studies/{study_id}/items:
    get:
      description: Get items for a Study
      operationId: getStudyItems
      parameters:
      - in: path
        name: study_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudyItems'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not found
      summary: Get items for a Study
      tags:
      - Studies
  /studies/{study_id}/items:bulk-add:
    post:
      description: Add one or more items to a Study
      operationId: addStudyItems
      parameters:
      - in: path
        name: study_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudyItemsCreateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudyItemsCreateResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Add one or more items to a Study
      tags:
      - Studies
  /studies/{study_id}/items:bulk-remove:
    post:
      description: Remove one or more items from a Study
      operationId: removeStudyItems
      parameters:
      - in: path
        name: study_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudyItemsDeleteRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Remove one or more items from a Study
      tags:
      - Studies
  /studies:archive:
    post:
      description: Archive Studies
      operationId: archiveStudies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudiesArchive'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudiesArchivalChange'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Archive Studies
      tags:
      - Studies
  /studies:bulk-create:
    post:
      description: Create one or more Studies
      operationId: bulkCreateStudies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudiesBulkCreateRequest'
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudiesBulkCreateResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad request
      summary: Create one or more Studies
      tags:
      - Studies
  /studies:bulk-update:
    post:
      description: Bulk Update Studies
      operationId: bulkUpdateStudies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudiesBulkUpdateRequest'
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudiesBulkUpdateResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad request
      summary: Bulk Update Studies
      tags:
      - Studies
  /studies:unarchive:
    post:
      description: Unarchive Studies
      operationId: unarchiveStudies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudiesUnarchive'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudiesArchivalChange'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
      summary: Unarchive Studies
      tags:
      - Studies
  /unit-types:
    get:
      description: 'List all unit types in the tenant Unit Dictionary, including their
        constituent units.

        '
      operationId: listUnitTypes
      parameters:
      - description: Token for pagination
        in: query
        name: nextToken
        schema:
          type: string
      - in: query
        name: pageSize
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  nextToken:
                    type: string
                  unitTypes:
                    items:
                      $ref: '#/components/schemas/UnitType'
                    type: array
                type: object
          description: OK
      summary: 'List all unit types

        '
      tags:
      - Units
  /unit-types/{unit_type_id}:
    get:
      description: 'Get a specific unit type, including constituent units.

        '
      operationId: getUnitType
      parameters:
      - in: path
        name: unit_type_id
        required: true
        schema:
          example: qnty_7W2R1EFJ
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitType'
          description: OK
        '404':
          description: Not Found
      summary: 'Get a specific unit type

        '
      tags:
      - Units
  /worklists/{worklist_id}/collaborations:
    get:
      description: 'Returns information about collaborations on the specified Worklists.

        '
      operationId: listWorklistCollaborations
      parameters:
      - description: ID of worklist for which to retrieve collaborations.
        in: path
        name: worklist_id
        required: true
        schema:
          type: string
      - in: query
        name: pageSize
        schema:
          default: 50
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
      - description: Token for pagination
        in: query
        name: nextToken
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollaborationsPaginatedList'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Not Found
      summary: List worklist collaborations
      tags:
      - Worklists
components:
  schemas:
    AccessPoliciesPaginatedList:
      additionalProperties: false
      properties:
        nextToken:
          type: string
        policies:
          items:
            $ref: '#/components/schemas/AccessPolicy'
          type: array
      type: object
    AccessPolicy:
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
        statements:
          items:
            $ref: '#/components/schemas/PolicyStatement'
          type: array
      type: object
    AppCollaborator:
      allOf:
      - properties:
          type:
            enum:
            - APP
            type: string
      - $ref: '#/components/schemas/AppSummary'
    AppConfigFieldType:
      default: null
      description: Schema field's type, or null for Any.
      enum:
      - dna_sequence_link
      - aa_sequence_link
      - custom_entity_link
      - entity_link
      - mixture_link
      - dropdown
      - part_link
      - translation_link
      - blob_link
      - text
      - long_text
      - batch_link
      - storage_link
      - entry_link
      - assay_request_link
      - assay_result_link
      - assay_run_link
      - boolean
      - float
      - integer
      - datetime
      - date
      - json
      nullable: true
      type: string
    AppSummary:
      properties:
        handle:
          type: string
        id:
          type: string
        name:
          type: string
      type: object
    ArchiveRecord:
      properties:
        reason:
          example: Made in error
          type: string
      type: object
    AssayFieldsCreate:
      additionalProperties: true
      type: object
    AssayResultCreate:
      properties:
        fieldValidation:
          additionalProperties:
            $ref: '#/components/schemas/UserValidation'
          description: 'Dictionary mapping field names to UserValidation Resources.

            '
          type: object
        fields:
          anyOf:
          - $ref: '#/components/schemas/Fields'
          - $ref: '#/components/schemas/AssayFieldsCreate'
          description: 'Dictionary of result fields. Please note the field keys must
            be the field''s warehouse name, not display name.

            '
          example:
            my_entity_link:
              value: bfi_a0B1cd23
            my_text_field:
              value: some text
        id:
          description: UUID
          type: string
        projectId:
          description: 'The project that the assay result should be uploaded to. Only
            users with read access to the project will be able to read the assay result.
            Leaving this empty will result in only the creator having read access.

            '
          nullable: true
          type: string
        schemaId:
          description: ID of result schema under which to upload this result
          type: string
      required:
      - schemaId
      - fields
      type: object
    AssayRunNotePart:
      allOf:
      - $ref: '#/components/schemas/BaseNotePart'
      - properties:
          assayRunId:
            example: 588aca02-1a20-4b94-a40f-b3f3a0081749
            nullable: true
            type: string
          assayRunSchemaId:
            example: assaysch_msh1Ly6g
            type: string
          type:
            enum:
            - assay_run
            type: string
        type: object
    Assembly:
      allOf:
      - $ref: '#/components/schemas/AssemblyShared'
      - $ref: '#/components/schemas/FinalizedAssembly'
      description: Bulk assembly object.
      type: object
    AssemblyConcatenationMethod:
      additionalProperties: false
      properties:
        parameters:
          additionalProperties: false
          properties:
            fragmentProductionMethod:
              enum:
              - SLICE
              type: string
            polymerType:
              enum:
              - DNA
              - RNA
              - AA
              type: string
          required:
          - polymerType
          - fragmentProductionMethod
          type: object
        type:
          enum:
          - CONCATENATION
          type: string
      required:
      - type
      - parameters
      type: object
    AssemblyConstantBin:
      additionalProperties: false
      properties:
        binType:
          enum:
          - CONSTANT
          type: string
        id:
          description: Unique identifier for the bin.
          type: string
        name:
          type: string
        residues:
          description: Base pairs or amino acid residues for the spacer/constant.
          type: string
      required:
      - name
      - id
      - binType
      - residues
      type: object
    AssemblyCreatedPrimer:
      additionalProperties: false
      properties:
        createdOligoId:
          description: API identifier of the Benchling oligo created by the assembly.
          type: string
        type:
          enum:
          - BULK_ASSEMBLY_CREATED_PRIMER
          type: string
      type: object
    AssemblyFragmentBin:
      additionalProperties: false
      properties:
        binType:
          enum:
          - FRAGMENT
          type: string
        fragmentProductionMethod:
          enum:
          - EXISTING_CUT_SITES
          - EXISTING_HOMOLOGY_REGIONS
          - PRIMER_PAIR
          type: string
        id:
          description: Unique identifier for the bin.
          type: string
        name:
          type: string
      required:
      - name
      - id
      - binType
      type: object
    AssemblyFragmentShared:
      additionalProperties: false
      properties:
        end:
          description: End position of the fragment in the provided input.
          type: number
        id:
          description: Unique identifier for the fragment.
          type: string
        orientation:
          enum:
          - FORWARD
          - REVERSE
          type: string
        polymer:
          $ref: '#/components/schemas/AssemblyPolymerReference'
        start:
          description: Start position of the fragment in the provided input.
          type: number
      required:
      - id
      - polymer
      - orientation
      type: object
    AssemblyGibsonExistingCutSitesParams:
      additionalProperties: false
      properties:
        fragmentProductionMethod:
          enum:
          - EXISTING_CUT_SITES
          type: string
        maximumHomologyAndBindingRegionLength:
          description: Maximum length, in base pairs, of the primer's binding/homology
            regions.
          example: 50
          type: number
        minimumBindingRegionMeltingTemperature:
          description: Minimum melting temperature of the primer binding region.
          example: 50
          type: number
        minimumHomologyAndBindingRegionLength:
          description: Minimum length, in base pairs, of the primer's binding/homology
            regions.
          example: 20
          type: number
      required:
      - fragmentProductionMethod
      - minimumBindingRegionMeltingTemperature
      - minimumHomologyAndBindingRegionLength
      - maximumHomologyAndBindingRegionLength
      type: object
    AssemblyGibsonExistingHomologyRegionsParams:
      additionalProperties: false
      properties:
        fragmentProductionMethod:
          enum:
          - EXISTING_HOMOLOGY_REGIONS
          type: string
        maximumHomologyAndBindingRegionLength:
          description: Maximum length, in base pairs, of the primer's binding/homology
            regions.
          example: 50
          type: number
        minimumBindingRegionMeltingTemperature:
          description: Minimum melting temperature of the primer binding region.
          example: 50
          type: number
        minimumHomologyAndBindingRegionLength:
          description: Minimum length, in base pairs, of the primer's binding/homology
            regions.
          example: 20
          type: number
      required:
      - fragmentProductionMethod
      - minimumBindingRegionMeltingTemperature
      - minimumHomologyAndBindingRegionLength
      - maximumHomologyAndBindingRegionLength
      type: object
    AssemblyGibsonMethod:
      additionalProperties: false
      properties:
        parameters:
          discriminator:
            mapping:
              EXISTING_CUT_SITES: '#/components/schemas/AssemblyGibsonExistingCutSitesParams'
              EXISTING_HOMOLOGY_REGIONS: '#/components/schemas/AssemblyGibsonExistingHomologyRegionsParams'
              PRIMER_PAIR: '#/components/schemas/AssemblyGibsonPrimerPairParams'
            propertyName: fragmentProductionMethod
          oneOf:
          - $ref: '#/components/schemas/AssemblyGibsonExistingHomologyRegionsParams'
          - $ref: '#/components/schemas/AssemblyGibsonExistingCutSitesParams'
          - $ref: '#/components/schemas/AssemblyGibsonPrimerPairParams'
        type:
          enum:
          - GIBSON
          type: string
      required:
      - type
      - parameters
      type: object
    AssemblyGibsonPrimerPairParams:
      additionalProperties: false
      properties:
        fragmentProductionMethod:
          enum:
          - PRIMER_PAIR
          type: string
        maximumHomologyAndBindingRegionLength:
          description: Maximum length, in base pairs, of the primer's binding/homology
            regions.
          example: 50
          type: number
        maximumPrimerPairMeltingTemperatureDifference:
          description: Maximum difference of melting temperature between both primers
            in a pair.
          example: 5
          type: number
        minimumBindingRegionMeltingTemperature:
          description: Minimum melting temperature of the primer binding region.
          example: 50
          type: number
        minimumHomologyAndBindingRegionLength:
          description: Minimum length, in base pairs, of the primer's binding/homology
            regions.
          example: 20
          type: number
        minimumPrimerMeltingTemperature:
          description: Minimum melting temperature of the whole primer.
          example: 50
          type: number
      required:
      - fragmentProductionMethod
      - minimumBindingRegionMeltingTemperature
      - minimumPrimerMeltingTemperature
      - minimumHomologyAndBindingRegionLength
      - maximumHomologyAndBindingRegionLength
      - maximumPrimerPairMeltingTemperatureDifference
      type: object
    AssemblyGoldenGateExistingCutSitesParams:
      additionalProperties: false
      properties:
        fragmentProductionMethod:
          enum:
          - EXISTING_CUT_SITES
          type: string
        type2SRestrictionEnzymeId:
          example: enz_Z1fxwlBi
          type: string
      required:
      - fragmentProductionMethod
      - type2SRestrictionEnzymeId
      type: object
    AssemblyGoldenGateMethod:
      additionalProperties: false
      properties:
        parameters:
          discriminator:
            mapping:
              EXISTING_CUT_SITES: '#/components/schemas/AssemblyGoldenGateExistingCutSitesParams'
              PRIMER_PAIR: '#/components/schemas/AssemblyGoldenGatePrimerPairParams'
            propertyName: fragmentProductionMethod
          oneOf:
          - $ref: '#/components/schemas/AssemblyGoldenGateExistingCutSitesParams'
          - $ref: '#/components/schemas/AssemblyGoldenGatePrimerPairParams'
        type:
          enum:
          - GOLDEN_GATE
          type: string
      required:
      - type
      - parameters
      type: object
    AssemblyGoldenGatePrimerPairParams:
      additionalProperties: false
      properties:
        fragmentProductionMethod:
          enum:
          - PRIMER_PAIR
          type: string
        maximumPrimerPairMeltingTemperatureDifference:
          description: Maximum difference of melting temperature between both primers
            in a pair.
          example: 5
          type: number
        minimumBindingRegionLength:
          description: Minimum length of the primer binding region.
          example: 18
          type: number
        minimumBindingRegionMeltingTemperature:
          description: Minimum melting temperature of the primer binding region.
          example: 50
          type: number
        preRecognitionSiteBases:
          description: Specific base pairs to insert before the type IIS enzyme recognition
            site.
          example: GATTACA
          type: string
        preRecognitionSiteLength:
          description: Number of base pairs to insert before the type IIS enzyme recognition
            site.
          example: 6
          type: number
        type2SRestrictionEnzymeId:
          example: enz_Z1fxwlBi
          type: string
      required:
      - fragmentProductionMethod
      - type2SRestrictionEnzymeId
      - preRecognitionSiteLength
      - preRecognitionSiteBases
      - minimumBindingRegionLength
      - minimumBindingRegionMeltingTemperature
      - maximumPrimerPairMeltingTemperatureDifference
      type: object
    AssemblyHomologyMethod:
      additionalProperties: false
      properties:
        parameters:
          additionalProperties: false
          properties:
            ambiguousConstructPreference:
              enum:
              - USE_LARGER_FRAGMENT_IN_FIRST_BIN
              - USE_SMALER_FRAGMENT_IN_FIRST_BIN
              type: string
            fragmentProductionMethod:
              enum:
              - EXISTING_HOMOLOGY_REGIONS
              type: string
          required:
          - fragmentProductionMethod
          - ambiguousConstructPreference
          type: object
        type:
          enum:
          - HOMOLOGY
          type: string
      required:
      - type
      - parameters
      type: object
    AssemblyPolymerReference:
      discriminator:
        mapping:
          AA_SEQUENCE: '#/components/schemas/AssemblyProteinReference'
          NUCLEOTIDE_SEQUENCE: '#/components/schemas/AssemblySequenceReference'
        propertyName: polymerType
      oneOf:
      - $ref: '#/components/schemas/AssemblySequenceReference'
      - $ref: '#/components/schemas/AssemblyProteinReference'
    AssemblyProteinReference:
      additionalProperties: false
      properties:
        polymerType:
          enum:
          - AA_SEQUENCE
          type: string
        proteinId:
          description: API identifier for the amino acid sequence.
          type: string
      required:
      - polymerType
      - proteinId
      type: object
    AssemblySequenceReference:
      additionalProperties: false
      properties:
        polymerType:
          enum:
          - NUCLEOTIDE_SEQUENCE
          type: string
        sequenceId:
          description: API identifier for the nucleotide sequence.
          type: string
      required:
      - polymerType
      - sequenceId
      type: object
    AssemblyShared:
      properties:
        assemblyType:
          enum:
          - CLONING
          - CONCATENATION
          type: string
        id:
          type: string
        name:
          type: string
      type: object
    AssemblySpecFinalized:
      description: Additional information required when creating and finalizing a
        bulk assembly.
      properties:
        folderId:
          description: API identifier of the folder in which the assembly should be
            created.
          type: string
        name:
          description: Name of the bulk assembly.
          type: string
        outputLocation:
          additionalProperties: false
          properties:
            constructFolderId:
              description: API identifier of the folder in which to create the constructs
              type: string
            fragmentFolderId:
              description: API identifier of the folder in which to create the fragments,
                if any. If not specified, fragments will not be created.
              type: string
            primerFolderId:
              description: API identifier of the folder in which to create the primers,
                if any. If not specified, primers will not be created as Benchling
                oligos, but will still be referencable in the context of the assembly,
                if they were designed.
              type: string
          required:
          - constructFolderId
          type: object
      required:
      - name
      - folderId
      - outputLocation
    AssemblySpecShared:
      description: Information required when validating or finalizing a bulk assembly.
      properties:
        assemblyParameters:
          description: Assembly-wide parameters to describe requirements and procedures
            for the assembly.
          discriminator:
            mapping:
              CONCATENATION: '#/components/schemas/AssemblyConcatenationMethod'
              GIBSON: '#/components/schemas/AssemblyGibsonMethod'
              GOLDEN_GATE: '#/components/schemas/AssemblyGoldenGateMethod'
              HOMOLOGY: '#/components/schemas/AssemblyHomologyMethod'
            propertyName: type
          oneOf:
          - $ref: '#/components/schemas/AssemblyGoldenGateMethod'
          - $ref: '#/components/schemas/AssemblyGibsonMethod'
          - $ref: '#/components/schemas/AssemblyHomologyMethod'
          - $ref: '#/components/schemas/AssemblyConcatenationMethod'
        bins:
          description: 'Bins are used to group fragments according to their position
            in the output construct or add a spacer (i.e. constant) region.

            '
          items:
            discriminator:
              mapping:
                CONSTANT: '#/components/schemas/AssemblyConstantBin'
                FRAGMENT: '#/components/schemas/AssemblyFragmentBin'
              propertyName: binType
            oneOf:
            - $ref: '#/components/schemas/AssemblyFragmentBin'
            - $ref: '#/components/schemas/AssemblyConstantBin'
          minItems: 2
          type: array
        constructs:
          description: Output constructs that should be created.
          items:
            properties:
              fragments:
                description: Ordered list of fragment IDs to use in creating the construct,
                  or a special option (SKIP) to indicate a bin should be skipped.
                items:
                  type: string
                type: array
              id:
                type: string
            required:
            - id
            - fragments
            type: object
          type: array
        fragments:
          description: Fragments to be used in the assembly.
          items:
            allOf:
            - $ref: '#/components/schemas/AssemblyFragmentShared'
            - additionalProperties: false
              properties:
                binId:
                  description: ID of the fragment's bin
                  example: bin1
                  type: string
                preferredPrimer3Id:
                  description: API identifier of a Benchling oligo to be used as a
                    primer at the 3' end of the fragment.
                  example: seq_yWs5X7lv
                  type: string
                preferredPrimer5Id:
                  description: API identifier of a Benchling oligo to be used as a
                    primer at the 5' end of the fragment.
                  example: seq_yWs5X7lv
                  type: string
                restrictionEnzyme3:
                  description: ID of enzyme used to digest fragment at 3' end
                  example: enz_Z1fxwlBi
                  type: string
                restrictionEnzyme5:
                  description: ID of enzyme used to digest fragment at 5' end
                  example: enz_Z1fxwlBi
                  type: string
              required:
              - binId
              type: object
          type: array
        topology:
          description: Whether the created constructs should be circular or linear.
          enum:
          - CIRCULAR
          - LINEAR
          type: string
      required:
      - assemblyParameters
      - topology
      - bins
      - fragments
      - constructs
    AssemblyTransientPrimer:
      additionalProperties: false
      properties:
        bases:
          description: Bases of the primer.
          type: string
        bindingPosition:
          description: Binding position of the primer on the construct.
          type: string
        type:
          enum:
          - BULK_ASSEMBLY_TRANSIENT_PRIMER
          type: string
      type: object
    AssemblyValidationStatus:
      properties:
        message:
          type: string
        type:
          enum:
          - ERROR
          - WARNING
          type: string
      type: object
    AsyncTask:
      properties:
        errors:
          description: 'Present only when status is FAILED for a bulk task. Contains
            information about the individual errors in the bulk task.

            '
          type: object
        message:
          description: Present only when status is FAILED. Contains information about
            the error.
          type: string
        response:
          description: Present only when status is SUCCEEDED. response can be empty
            if there is no data to be returned.
          type: object
        status:
          description: The current state of the task.
          enum:
          - RUNNING
          - SUCCEEDED
          - FAILED
          type: string
      required:
      - status
      type: object
    AsyncTaskLink:
      properties:
        taskId:
          format: uuid
          type: string
      type: object
    AuditLogExport:
      additionalProperties: false
      properties:
        format:
          description: The format of the exported file.
          enum:
          - CSV
          - PDF
          type: string
      required:
      - format
      type: object
    BadRequestError:
      properties:
        error:
          allOf:
          - $ref: '#/components/schemas/BaseError'
          - properties:
              type:
                enum:
                - invalid_request_error
                type: string
      type: object
    BarcodeFormField:
      allOf:
      - $ref: '#/components/schemas/BaseFormField'
      - description: Form Field containing a scanned barcode value
        properties:
          type:
            description: 'The type of this form field. Type declares how this field
              behaves and dictates the additional properties passed along with the
              required properties like label and key

              '
            enum:
            - BARCODE
            type: string
        type: object
    BarcodeQueryValuePart:
      additionalProperties: false
      discriminator:
        mapping:
          BARCODE_VALUE: '#/components/schemas/FormBarcodeValueReference'
          FORM_FIELD_VALUE: '#/components/schemas/FormFieldValueReference'
          RAW_STRING: '#/components/schemas/FormRawStringQueryValuePart'
        propertyName: type
      type: object
    BarcodeScanFormInstanceProvider:
      allOf:
      - $ref: '#/components/schemas/InstanceProvider'
      - description: 'Form instance provider that enables scanning barcodes with the
          device''s camera to populate instances of nested forms

          '
        properties:
          identifierType:
            description: 'How we identify the entity that we should query for. Because
              Benchling entities have several different ways of declaring identity,
              we also must allow for different ways they can be distinguished by their
              barcodes.

              '
            enum:
            - NAME_ONLY
            - REGISTRY_ID_ONLY
            - ANY_IDENTIFIER
            type: string
          mode:
            description: 'How we differentiate between single scan mode and multiple
              scan mode. This will allow a user to either choose to scan and load
              one barcode at a time or multiple barcodes.

              '
            enum:
            - MULTIPLE_SCAN
            - SINGLE_SCAN
            type: string
          queryValueFrom:
            description: 'Because in some contexts barcodes are not necessarily unique,
              we must also allow for ways to construct the actual value that we should
              use to match a Benchling entity with. An example here would be entities
              whose names are constructed like: <barcode>-<crop>

              '
            items:
              oneOf:
              - $ref: '#/components/schemas/FormBarcodeValueReference'
              - $ref: '#/components/schemas/FormRawStringQueryValuePart'
              - $ref: '#/components/schemas/FormFieldValueReference'
            type: array
          type:
            enum:
            - BARCODE_SCAN
            type: string
        type: object
    BaseError:
      properties:
        message:
          type: string
        type:
          type: string
        userMessage:
          type: string
      type: object
    BaseFormDefinitionVersion:
      properties:
        fields:
          description: 'Each element defines a field in our form. Form fields are
            composed of a set of attributes at the top level, and a polymorphic set
            of attributes under the properties attribute. The specific properties
            that can be passed to a form field are unique to whatever is set in the
            type attribute. For example, a form field of type STRING_SELECTION will
            have an attribute within properties of options; however, this options
            attribute does not make sense for a form field of type ENTITY_LINK.

            '
          items:
            anyOf:
            - $ref: '#/components/schemas/StringSelectFormField'
            - $ref: '#/components/schemas/FreeFormTextFormField'
            - $ref: '#/components/schemas/DateSelectionFormField'
            - $ref: '#/components/schemas/EntityLinkFormField'
            - $ref: '#/components/schemas/BarcodeFormField'
            - $ref: '#/components/schemas/NestedFormField'
          type: array
      type: object
    BaseFormField:
      additionalProperties: false
      discriminator:
        mapping:
          BARCODE: '#/components/schemas/BarcodeFormField'
          DATE_SELECTION: '#/components/schemas/DateSelectionFormField'
          ENTITY_LINK: '#/components/schemas/EntityLinkFormField'
          FORM: '#/components/schemas/NestedFormField'
          FREE_FORM_TEXT: '#/components/schemas/FreeFormTextFormField'
          STRING_SELECTION: '#/components/schemas/StringSelectFormField'
        propertyName: type
      properties:
        description:
          description: Description of the purpose of this field
          example: Date that you discarded these plants
          type: string
        isRequired:
          description: Whether this field is required to be filled out in order to
            be a valid submission
          type: boolean
        key:
          description: Reference key of this form field. Used to fix identity of fields
            beyond the label
          example: discard_date
          type: string
        label:
          description: End user facing name of this form field. What you see when
            you fill out the form each time
          example: Discard Date
          type: string
      type: object
    BaseManifestConfig:
      properties:
        description:
          nullable: true
          type: string
        name:
          type: string
      required:
      - name
      type: object
    BaseManifestScalarConfig:
      allOf:
      - $ref: '#/components/schemas/BaseManifestConfig'
      - properties:
          requiredConfig:
            default: false
            nullable: false
            type: boolean
      type: object
    BaseNotePart:
      properties:
        indentation:
          default: 0
          description: All notes have an indentation level - the default is 0 for
            no indent. For lists, indentation gives notes hierarchy - a bulleted list
            with children is modeled as one note part with indentation 1 followed
            by note parts with indentation 2, for example.
          minimum: 0
          type: integer
        type:
          description: The type of the note.  Type determines what other fields are
            present.
          type: string
      type: object
    BenchlingAppManifest:
      properties:
        configuration:
          items:
            anyOf:
            - $ref: '#/components/schemas/SchemaDependency'
            - $ref: '#/components/schemas/EntitySchemaDependency'
            - $ref: '#/components/schemas/WorkflowTaskSchemaDependency'
            - $ref: '#/components/schemas/DropdownDependency'
            - $ref: '#/components/schemas/ResourceDependency'
            - $ref: '#/components/schemas/ManifestArrayConfig'
            - $ref: '#/components/schemas/ManifestTextScalarConfig'
            - $ref: '#/components/schemas/ManifestFloatScalarConfig'
            - $ref: '#/components/schemas/ManifestIntegerScalarConfig'
            - $ref: '#/components/schemas/ManifestBooleanScalarConfig'
            - $ref: '#/components/schemas/ManifestDateScalarConfig'
            - $ref: '#/components/schemas/ManifestDatetimeScalarConfig'
            - $ref: '#/components/schemas/ManifestSecureTextScalarConfig'
            - $ref: '#/components/schemas/ManifestJsonScalarConfig'
            discriminator:
              mapping:
                aa_sequence: '#/components/schemas/ResourceDependency'
                array: '#/components/schemas/ManifestArrayConfig'
                boolean: '#/components/schemas/ManifestBooleanScalarConfig'
                box: '#/components/schemas/ResourceDependency'
                box_schema: '#/components/schemas/SchemaDependency'
                container: '#/components/schemas/ResourceDependency'
                container_schema: '#/components/schemas/SchemaDependency'
                custom_entity: '#/components/schemas/ResourceDependency'
                date: '#/components/schemas/ManifestDateScalarConfig'
                datetime: '#/components/schemas/ManifestDatetimeScalarConfig'
                dna_oligo: '#/components/schemas/ResourceDependency'
                dna_sequence: '#/components/schemas/ResourceDependency'
                dropdown: '#/components/schemas/DropdownDependency'
                entity_schema: '#/components/schemas/EntitySchemaDependency'
                entry: '#/components/schemas/ResourceDependency'
                entry_schema: '#/components/schemas/SchemaDependency'
                float: '#/components/schemas/ManifestFloatScalarConfig'
                folder: '#/components/schemas/ResourceDependency'
                integer: '#/components/schemas/ManifestIntegerScalarConfig'
                json: '#/components/schemas/ManifestJsonScalarConfig'
                location: '#/components/schemas/ResourceDependency'
                location_schema: '#/components/schemas/SchemaDependency'
                mixture: '#/components/schemas/ResourceDependency'
                molecule: '#/components/schemas/ResourceDependency'
                plate: '#/components/schemas/ResourceDependency'
                plate_schema: '#/components/schemas/SchemaDependency'
                project: '#/components/schemas/ResourceDependency'
                registry: '#/components/schemas/ResourceDependency'
                request_schema: '#/components/schemas/SchemaDependency'
                result_schema: '#/components/schemas/SchemaDependency'
                rna_oligo: '#/components/schemas/ResourceDependency'
                rna_sequence: '#/components/schemas/ResourceDependency'
                run_schema: '#/components/schemas/SchemaDependency'
                secure_text: '#/components/schemas/ManifestSecureTextScalarConfig'
                text: '#/components/schemas/ManifestTextScalarConfig'
                workflow_task_schema: '#/components/schemas/WorkflowTaskSchemaDependency'
                workflow_task_status: '#/components/schemas/ResourceDependency'
                worklist: '#/components/schemas/ResourceDependency'
              propertyName: type
          maxItems: 100
          type: array
        features:
          items:
            description: A feature allows an App to bidirectionally communicate with
              users through a Canvas
            properties:
              id:
                description: User-defined identifier of feature. Must be unique within
                  a single app's manifest.
                example: data_sync_id1
                type: string
              locations:
                description: Only supported when feature type is CANVAS. The locations
                  where the canvas feature should be available.
                items:
                  $ref: '#/components/schemas/BenchlingAppManifestFeatureCanvasLocations'
                type: array
              name:
                example: My App Feature
                type: string
              type:
                description: 'The feature type controls where in the UI a Canvas associated
                  with this feature is rendered.

                  '
                enum:
                - APP_HOMEPAGE
                - ASSAY_RUN
                - CANVAS
                type: string
            required:
            - name
            - id
            - type
            type: object
          type: array
        info:
          properties:
            description:
              example: This is my first App!
              type: string
            name:
              example: My First App
              type: string
            version:
              default: 0.0.1
              description: A semver string for the version of the benchling app described
                by this manifest.
              example: 0.1.0
              pattern: ((0|[1-9][0-9]*)\.){2}(0|[1-9][0-9]*)
              type: string
          type: object
        manifestVersion:
          enum:
          - 1
          type: integer
        security:
          additionalProperties: false
          properties:
            publicKey:
              deprecated: true
              description: "Public key used to encrypt secure_text values. The value\
                \ is constrained:\n  * value must be a public key PEM certificate\n\
                \  * key type (kty) must be RSA\n  * algorithm must be RSAES_OAEP_SHA_256\n\
                \  * key size must be 2048 bits, with exponent=65537\n  * key usage\
                \ (use) must not be \"signing\". It can be either unspecified, or\
                \ \"encrypt/decrypt\""
              example: '----BEGIN PUBLIC KEY----

                MIGbMBAGByqGSM49AgE...

                ----END PUBLIC KEY----'
              pattern: ^\s*-*BEGIN PUBLIC KEY-*[\s\S]*-*END PUBLIC KEY-*\s*$
              type: string
          type: object
        subscriptions:
          description: 'Subscriptions allow an app to receive notifications when certain
            actions and changes occur in Benchling.

            '
          properties:
            deliveryMethod:
              $ref: '#/components/schemas/DeliveryMethod'
            messages:
              items:
                allOf:
                - $ref: '#/components/schemas/MessageSubscriptionWebhookV2Beta'
              type: array
              uniqueItems: true
          required:
          - deliveryMethod
          - messages
          type: object
      type: object
    BenchlingAppManifestAlpha:
      allOf:
      - $ref: '#/components/schemas/BenchlingAppManifest'
      - properties:
          features:
            items:
              description: A feature allows an App to bidirectionally communicate
                with users through a Canvas
              properties:
                id:
                  description: User-defined identifier of feature. Must be unique
                    within a single app's manifest.
                  example: data_sync_id1
                  type: string
                name:
                  example: My App Feature
                  type: string
                type:
                  description: 'The feature type controls where in the UI a Canvas
                    associated with this feature is rendered.

                    '
                  enum:
                  - APP_HOMEPAGE
                  type: string
              required:
              - name
              - id
              - type
              type: object
            type: array
          settings:
            properties:
              canvasWebhookUrl:
                description: 'URL that Benchling sends app canvas payloads to. It
                  will override the default webhookUrl This destination should be
                  backed by an endpoint owned by your application.

                  '
                example: https://o2vzfoobar.lambda-url.us-east-2.on.aws/
                type: string
              lifecycleManagement:
                description: 'Specify whether app will be activated automatically
                  or manually. If automatic is specified, a webhook url is required.

                  '
                enum:
                - automatic
                - manual
                type: string
              lifecycleWebhookUrl:
                description: 'URL that Benchling sends app lifecycle payloads to.
                  It will override the default webhookUrl This destination should
                  be backed by an endpoint owned by your application.

                  '
                example: https://o2vzfoobar.lambda-url.us-east-2.on.aws/
                type: string
              webhookUrl:
                deprecated: true
                description: 'URL that Benchling sends app interaction payloads to.
                  This is the default URL if no other webhook URLs are specified in
                  the app''s manifest. This destination should be backed by an endpoint
                  owned by your application.

                  '
                example: https://o2vzfoobar.lambda-url.us-east-2.on.aws/
                type: string
            type: object
        type: object
      type: object
    BenchlingAppManifestFeatureCanvasLocations:
      enum:
      - ENTRY
      - ENTRY_TEMPLATE
      type: string
    BoxCreationTableNotePart:
      allOf:
      - $ref: '#/components/schemas/BaseNotePart'
      - $ref: '#/components/schemas/StructuredTableApiIdentifiers'
      - properties:
          boxSchemaId:
            example: boxsch_MAbGlEtf
            type: string
          type:
            enum:
            - box_creation_table
            type: string
        type: object
    BulkCreateEntriesRequest:
      additionalProperties: false
      properties:
        entryDatas:
          items:
            $ref: '#/components/schemas/EntryCreateAttachments'
          type: array
      type: object
    ChartNotePart:
      allOf:
      - $ref: '#/components/schemas/BaseNotePart'
      - properties:
          chart:
            description: The full configuration for the chart to be displayed in-line
              in this note part.
            properties:
              id:
                description: The API identifier for this Analysis Chart.
                type: string
            type: object
          type:
            enum:
            - note_linked_chart
            type: string
        type: object
    CheckboxNotePart:
      allOf:
      - $ref: '#/components/schemas/BaseNotePart'
      - properties:
          checked:
            description: 'Indicates whether the checkbox is checked or not.

              '
            type: boolean
          links:
            description: 'Array of links referenced in text via an @-mention, hyperlink,
              or the drag-n-dropped preview attached to the note.

              '
            items:
              $ref: '#/components/schemas/EntryLink'
            type: array
          text:
            description: The textual contents of the note.
            type: string
          type:
            enum:
            - list_checkbox
            type: string
        type: object
      description: One "line" of a checklist
    Collaboration:
      allOf:
      - properties:
          accessPolicy:
            $ref: '#/components/schemas/AccessPolicy'
          collaborator:
            discriminator:
              mapping:
                APP: api/v2-beta/openapi.yaml#/components/schemas/AppCollaborator
                ORGANIZATION_MEMBER: '#/components/schemas/OrgMembershipCollaborator'
                TEAM_MEMBER: '#/components/schemas/TeamMembershipCollaborator'
                USER: '#/components/schemas/UserCollaborator'
              propertyName: type
            oneOf:
            - $ref: '#/components/schemas/OrgMembershipCollaborator'
            - $ref: '#/components/schemas/TeamMembershipCollaborator'
            - $ref: '#/components/schemas/UserCollaborator'
            - $ref: '#/components/schemas/AppCollaborator'
          createdAt:
            nullable: false
            type: string
          id:
            nullable: false
            type: string
          itemId:
            nullable: false
            type: string
          itemType:
            nullable: false
            type: string
          modifiedAt:
            nullable: false
            type: string
      type: object
    CollaborationsPaginatedList:
      additionalProperties: false
      properties:
        collaborations:
          items:
            $ref: '#/components/schemas/Collaboration'
          type: array
        nextToken:
          type: string
      type: object
    ConnectionFilesPaginatedList:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - properties:
          connectionFiles:
            items:
              additionalProperties: false
              properties:
                connectionId:
                  type: string
                createdAt:
                  format: date-time
                  type: string
                dataType:
                  enum:
                  - ALLOTROPE
                  - GROUP
                  - INJECTIONS
                  - MEASUREMENT
                  - ORIGINAL
                  - PEAKS
                  - PROCESSED
                  - SAMPLE
                  - STATISTICS
                  - WELL
                  type: string
                downloadUrl:
                  description: 'URL to download the file. This URL is only valid for
                    24 hours.

                    '
                  type: string
                filename:
                  type: string
                id:
                  type: string
                instrumentQueryId:
                  type: string
                modifiedAt:
                  format: date-time
                  type: string
                status:
                  enum:
                  - NOT_UPLOADED
                  - UPLOADED
                  - ARCHIVED
                  - ERRORED
                  - FORMAT_ERROR
                  type: string
              type: object
            type: array
    ConstraintCreate:
      properties:
        areUniqueResiduesCaseSensitive:
          type: boolean
        fields:
          items:
            properties:
              name:
                type: string
            type: object
          type: array
        hasUniqueCanonicalSmiles:
          type: boolean
        hasUniqueResidues:
          type: boolean
      type: object
    ConstraintStatus:
      properties:
        fields:
          items:
            $ref: '#/components/schemas/FieldDefinition'
          type: array
        status:
          enum:
          - ACTIVE
          - COMPUTING
          - INACTIVE
          type: string
      type: object
    CreateEntityIntoRegistry:
      properties:
        entityRegistryId:
          description: 'Entity registry ID to set for the registered entity. Cannot
            specify both entityRegistryId and namingStrategy at the same time.

            '
          type: string
        folderId:
          description: ID of the folder containing the entity. Can be left empty when
            registryId is present.
          type: string
        namingStrategy:
          $ref: '#/components/schemas/NamingStrategy'
        registryId:
          description: 'Registry ID into which entity should be registered. this is
            the ID of the registry which was configured for a particular organization

            To get available registryIds, use the [/registries endpoint](#/Registry/listRegistries)


            Required in order for entities to be created directly in the registry.

            '
          type: string
      type: object
    CustomField:
      properties:
        value:
          type: string
      type: object
    CustomFields:
      additionalProperties:
        $ref: '#/components/schemas/CustomField'
      example:
        Legacy ID:
          value: STR100
      type: object
    DateSelectionFormField:
      allOf:
      - $ref: '#/components/schemas/BaseFormField'
      - description: Form Field enabling selection of a date
        properties:
          daysAllowedInFuture:
            type: integer
          defaultToday:
            description: Whether the value of this field should default to the current
              day
            type: boolean
          type:
            description: 'The type of this form field. Type declares how this field
              behaves and dictates the additional properties passed along with the
              required properties like label and key

              '
            enum:
            - DATE_SELECTION
            type: string
        type: object
    DeliveryMethod:
      description: 'The delivery method for the subscriptions. Currently only webhook
        is supported.

        '
      enum:
      - WEBHOOK
      type: string
    DnaAnnotation:
      allOf:
      - $ref: '#/components/schemas/SequenceFeatureBase'
      - properties:
          end:
            description: 0-based exclusive end index. The end of the sequence is always
              represented as 0.
            type: integer
          start:
            description: 0-based inclusive start index.
            type: integer
          strand:
            maximum: 1
            minimum: -1
            type: integer
          type:
            type: string
        type: object
    DnaOligo:
      allOf:
      - $ref: '#/components/schemas/Oligo'
      - properties:
          annotations:
            description: Annotations on the Oligo.
            items:
              $ref: '#/components/schemas/DnaAnnotation'
            type: array
          apiURL:
            example: https://benchling.com/api/v2/dna-oligos/seq_bhuDUw9D
            type: string
          bases:
            example: ACTTTTT
            type: string
          customNotation:
            description: Representation of the oligo in the custom notation specified
              in the request. Null if no notation was specified.
            nullable: true
            type: string
          customNotationName:
            description: Name of the custom notation specified in the request. Null
              if no notation was specified.
            nullable: true
            type: string
          helm:
            description: Representation of the oligo in HELM syntax, including any
              chemical modifications
            example: RNA1{d(A)p.d(C)[Ssp].d(T)p.d(T)p.d(T)p.d(T)p.d(T)p}$$$$V2.0
            type: string
    DnaOligoHelm:
      allOf:
      - $ref: '#/components/schemas/DnaOligo'
      - properties:
          helm:
            description: Representation of the oligo in HELM syntax, including any
              chemical modifications
            example: RNA1{r(A)p.r(C)[Ssp].r(T)p.r(T)p.r(T)p.r(T)p.r(T)p}$$$$V2.0
            type: string
    DnaOligosBulkCreateRequestHelm:
      additionalProperties: false
      properties:
        dnaOligos:
          items:
            $ref: '#/components/schemas/OligoCreateHelm'
          type: array
      type: object
    DnaOligosPaginatedListHelm:
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - properties:
          dnaOligos:
            items:
              $ref: '#/components/schemas/DnaOligoHelm'
            type: array
    DropdownDependency:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/BaseManifestConfig'
      - properties:
          options:
            items:
              $ref: '#/components/schemas/BaseManifestConfig'
            type: array
          requiredConfig:
            default: false
            nullable: false
            type: boolean
          type:
            $ref: '#/components/schemas/DropdownDependencyTypes'
        type: object
      - required:
        - type
      type: object
    DropdownDependencyTypes:
      enum:
      - dropdown
      type: string
    EmptyObject:
      type: object
    EntityLinkFormField:
      allOf:
      - $ref: '#/components/schemas/BaseFormField'
      - description: Form Field enabling reference of a Benchling Entity
        properties:
          entityType:
            description: Benchling entity type of this link. Currently only custom_entity
              is supported
            enum:
            - custom_entity
            type: string
          schemaId:
            description: Schema ID of the entity in question
            type: string
          type:
            description: 'The type of this form field. Type declares how this field
              behaves and dictates the additional properties passed along with the
              required properties like label and key

              '
            enum:
            - ENTITY_LINK
            type: string
        type: object
    EntitySchema:
      allOf:
      - $ref: '#/components/schemas/EntitySchemaBase'
      - $ref: '#/components/schemas/EntitySchemaSummary'
      type: object
    EntitySchemaBase:
      properties:
        authParentOption:
          enum:
          - FOLDER
          - PROJECT_FOLDER
          type: string
        constraint:
          allOf:
          - $ref: '#/components/schemas/ConstraintCreate'
          nullable: true
        containableType:
          enum:
          - NONE
          - ENTITY
          - BATCH
          type: string
        fields:
          items:
            $ref: '#/components/schemas/FieldCreate'
          nullable: true
          type: array
        includeRegistryIdInChips:
          type: boolean
        isContainable:
          type: boolean
        labelingStrategies:
          items:
            $ref: '#/components/schemas/NamingStrategy'
          type: array
        mixtureSchemaConfig:
          nullable: true
          type: object
        name:
          type: string
        prefix:
          type: string
        registryId:
          type: string
        resultSchemaId:
          nullable: true
          type: string
        sequenceType:
          nullable: true
          type: string
        shouldCreateAsOligo:
          type: boolean
        shouldOrderNamePartsBySequence:
          type: boolean
        showResidues:
          type: boolean
        type:
          enum:
          - custom_entity
          - dna_sequence
          - rna_sequence
          - aa_sequence
          - mixture
          - dna_oligo
          - rna_oligo
          - molecule
          - entry
          type: string
        useOrganizationCollectionAliasForDisplayLabel:
          type: boolean
      type: object
    EntitySchemaCreate:
      allOf:
      - $ref: '#/components/schemas/EntitySchemaBase'
      - required:
        - name
        - prefix
        - registryId
        - type
      type: object
    EntitySchemaDependency:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/SchemaBaseDependency'
      - properties:
          subtype:
            $ref: '#/components/schemas/SchemaDependencySubtypes'
          type:
            enum:
            - entity_schema
            type: string
        type: object
      - required:
        - type
      type: object
    EntitySchemaSummary:
      properties:
        archiveRecord:
          allOf:
          - $ref: '#/components/schemas/ArchiveRecord'
          nullable: true
        id:
          example: ts_abcdefgh
          type: string
        modifiedAt:
          description: DateTime the Entity Schema was last modified
          example: '2017-04-18T05:55:48.685345+00:00'
          format: date-time
          type: string
        nameTemplate:
          items:
            $ref: '#/components/schemas/NameTemplatePart'
          type: array
      type: object
    EntitySchemasPaginatedList:
      properties:
        entitySchemas:
          items:
            $ref: '#/components/schemas/EntitySchema'
          readOnly: true
          type: array
        nextToken:
          type: string
      type: object
    EntitySearchFormInstanceProvider:
      allOf:
      - $ref: '#/components/schemas/InstanceProvider'
      - description: Form instance provider that resolves entities via user type-ahead
          search
        properties:
          targetFieldKey:
            description: 'Where the entities that we search for should be populated
              within our form. Note here that we inherit any considerations and limitations
              on the values these entities can take on, like schemaId, from the definition
              of the field we''re routing them to.

              '
            type: string
          type:
            enum:
            - ENTITY_SEARCH
            type: string
        type: object
    EntriesPaginatedList:
      properties:
        entries:
          items:
            $ref: '#/components/schemas/Entry'
          type: array
        nextToken:
          type: string
      type: object
    Entry:
      description: 'Entries are notes that users can take. They''re organized by "days"
        (which are user-configurable) and modeled within each day as a list of "notes."
        Each note has a type - the simplest is a "text" type, but lists, tables, and
        external files are also supported.


        *Note:* the current Entry resource has a few limitations:

        - Formatting information is not yet supported. Header formatting, bolding,
        and other stylistic information is not presented.

        - Data in tables is presented as text always - numeric values will need to
        be parsed into floats or integers, as appropriate.


        Note: Data in Results tables are not accessible through this API call. Results
        table data can be called through the Results API calls.

        '
      properties:
        apiURL:
          description: The canonical url of the Entry in the API.
          example: https://benchling.com/api/v2/entries/etr_tv7m7B78
          format: uri
          readOnly: true
          type: string
        archiveRecord:
          allOf:
          - $ref: '#/components/schemas/ArchiveRecord'
          description: 'ArchiveRecord Resource if the entry is archived. This is null
            if the entry is not archived.

            '
          nullable: true
        assignedReviewers:
          description: 'Array of users assigned to review the entry, if any.

            '
          items:
            $ref: '#/components/schemas/UserSummary'
          type: array
        authors:
          description: 'Array of UserSummary Resources of the authors of the entry.
            This defaults to the creator but can be manually changed.

            '
          items:
            $ref: '#/components/schemas/UserSummary'
          type: array
        createdAt:
          description: DateTime the entry was created at
          format: date-time
          readOnly: true
          type: string
        creator:
          allOf:
          - $ref: '#/components/schemas/UserSummary'
          description: UserSummary Resource of the user who created the entry
          readOnly: true
        customFields:
          $ref: '#/components/schemas/CustomFields'
        days:
          description: 'Array of day objects. Each day object has a date field (string)
            and notes field (array of notes, expand further for details on note types).

            '
          items:
            $ref: '#/components/schemas/EntryDay'
          type: array
        displayId:
          description: User-friendly ID of the entry
          type: string
        entryTemplateId:
          description: ID of the Entry Template this Entry was created from
          nullable: true
          type: string
        fields:
          $ref: '#/components/schemas/Fields'
        folderId:
          description: ID of the folder that contains the entry
          type: string
        id:
          description: ID of the entry
          type: string
        modifiedAt:
          description: DateTime the entry was last modified
          type: string
        name:
          description: Title of the entry
          type: string
        reviewRecord:
          description: Review record if set
          nullable: true
          properties:
            comment:
              description: Reviewer's Comments
              type: string
            reviewProcesses:
              description: Review Processes associated with the Entry
              items:
                $ref: '#/components/schemas/EntryReviewProcess'
              nullable: true
              type: array
            status:
              description: Review Status of the entry
              enum:
              - ACCEPTED
              - NEEDS_REVIEW
              - REJECTED
              - RETRACTED
              - ACCEPTANCE_SNAPSHOT_IN_PROGRESS
              - REVIEW_SNAPSHOT_IN_PROGRESS
              - IN_PROGRESS
              - ACTION_REQUIRED
              type: string
          type: object
        schema:
          allOf:
          - $ref: '#/components/schemas/EntrySchema'
          description: Entry schema if set
          nullable: true
          title: SchemaProperty
          type: object
        webURL:
          description: URL of the entry
          type: string
      type: object
    EntryAttachments:
      additionalProperties: false
      properties:
        attachmentText:
          description: 'Text to include in the entry before the attachments. If not
            provided, the text will be "File attachments are listed below:"

            '
        attachments:
          description: 'An array of IDs representing Blob objects in Benchling to
            be attached to the entry.

            '
          items:
            type: string
          type: array
      type: object
    EntryById:
      properties:
        entry:
          $ref: '#/components/schemas/Entry'
      type: object
    EntryCreate:
      additionalProperties: false
      properties:
        authorIds:
          oneOf:
          - deprecated: true
            type: string
          - description: 'IDs of users to set as the entry''s authors. Defaults to
              the creator.

              '
            items:
              type: string
            type: array
        customFields:
          allOf:
          - $ref: '#/components/schemas/CustomFields'
          description: Custom fields to add to the entry
        entryTemplateId:
          description: ID of the template to clone the entry from
          type: string
        fields:
          allOf:
          - $ref: '#/components/schemas/Fields'
          description: 'Fields to set on the entry. Must correspond with the schema''s
            field definitions.

            '
        folderId:
          description: ID of the folder that will contain the entry
          type: string
        initialTables:
          description: 'An array of table API IDs and blob id pairs to seed tables
            from the template while creating the entry. The entryTemplateId parameter
            must be set to use this parameter. The table API IDs should be the API
            Identifiers of the tables in the given template.

            - If a template table has one row, the values in that row act as default
            values for cloned entries.

            - If a template table has multiple rows, there is no default value and
            those rows are added to the cloned entry along with the provided csv data.

            - If a table has default values, they will be populated in any respective
            undefined columns in the csv data.

            - If a table has no default values, undefined columns from csv data will
            be empty.

            - If no csv data is provided for a table, the table in the entry will
            be populated with whatever values are in the respective template table.

            '
          items:
            $ref: '#/components/schemas/InitialTable'
          type: array
        name:
          description: Name of the entry
          type: string
        schemaId:
          description: ID of the entry's schema
          type: string
      required:
      - name
      - folderId
      type: object
    EntryCreateAttachments:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/EntryCreate'
      - $ref: '#/components/schemas/EntryAttachments'
      - $ref: '#/components/schemas/EntryCreateInitialTablesArray'
      - properties:
          reviewRecord:
            additionalProperties: false
            properties:
              comment:
                description: User message to set on review
                type: string
              status:
                description: Review Status for entry
                enum:
                - ACCEPTED
                type: string
            type: object
      type: object
    EntryCreateInitialTablesArray:
      properties:
        initialTables:
          items:
            $ref: '#/components/schemas/InitialTable'
          type: array
      type: object
    EntryDay:
      properties:
        date:
          description: A Date string
          type: string
        notes:
          items:
            $ref: '#/components/schemas/EntryNotePart'
          type: array
        title:
          description: Optional title of a section if sections are enabled.
          nullable: true
          type: string
      type: object
    EntryExternalFile:
      description: 'The ExternalFile resource stores metadata about the file. The
        actual original file can be downloaded by using the ''downloadURL'' property.

        '
      properties:
        downloadURL:
          description: 'A short-lived URL that can be used to download the original
            file.

            '
          type: string
        expiresAt:
          description: UNIX timestamp when downloadURL expires.
          type: integer
        id:
          description: ID of the external file
          type: string
        size:
          description: Size, in bytes, of the external file
          type: integer
      type: object
    EntryExternalFileById:
      properties:
        externalFile:
          $ref: '#/components/schemas/EntryExternalFile'
      type: object
    EntryLink:
      description: 'Links are contained within notes to reference resources that live
        outside of the entry. A link can target an external resource via an http(s)://
        hyperlink or a Benchling resource via @-mentions and drag-n-drop.

        '
      properties:
        id:
          description: 'For linked Benchling resources, this will be the ID of that
            resource (e.g., ''seq_RhYGVnHF''). Omitted for "link" types.

            '
          type: string
        type:
          description: 'The type of resource being linked. For hyperlinks: ''link''.
            For linked Benchling resources, one of: ''user'', ''request'', ''entry'',
            ''stage_entry'', ''protocol'', ''workflow'', ''custom_entity'', ''aa_sequence'',
            ''dna_sequence'', ''batch'', ''box'', ''container'', ''location'', ''plate'',
            ''sql_dashboard''; and (for legacy support) ''insights_dashboard'', ''folder''.

            '
          enum:
          - link
          - user
          - request
          - entry
          - stage_entry
          - protocol
          - workflow
          - custom_entity
          - aa_sequence
          - dna_sequence
          - batch
          - box
          - container
          - location
          - plate
          - insights_dashboard
          - folder
          - sql_dashboard
          type: string
        webURL:
          description: 'Canonical URL of the linked Benchling resource (if you have
            at least READ authorization for that resource), or the explicit URL provided
            as hyperlink for "link" types. Note: locations do not currently have a
            URL.

            '
          nullable: true
          type: string
      type: object
    EntryNotePart:
      description: 'Notes are the main building blocks of entries. Each note corresponds
        roughly to a paragraph.

        '
      discriminator:
        mapping:
          assay_run: '#/components/schemas/AssayRunNotePart'
          box_creation_table: '#/components/schemas/BoxCreationTableNotePart'
          code: '#/components/schemas/SimpleNotePart'
          external_file: '#/components/schemas/ExternalFileNotePart'
          inventory_container_table: '#/components/schemas/InventoryContainerTableNotePart'
          inventory_plate_table: '#/components/schemas/InventoryPlateTableNotePart'
          list_bullet: '#/components/schemas/SimpleNotePart'
          list_checkbox: '#/components/schemas/CheckboxNotePart'
          list_number: '#/components/schemas/SimpleNotePart'
          lookup_table: '#/components/schemas/LookupTableNotePart'
          mixture_prep_table: '#/components/schemas/MixturePrepTableNotePart'
          note_linked_chart: '#/components/schemas/ChartNotePart'
          plate_creation_table: '#/components/schemas/PlateCreationTableNotePart'
          registration_table: '#/components/schemas/RegistrationTableNotePart'
          results_table: '#/components/schemas/ResultsTableNotePart'
          table: '#/components/schemas/TableNotePart'
          text: '#/components/schemas/SimpleNotePart'
          text_box: '#/components/schemas/TextBoxNotePart'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/SimpleNotePart'
      - $ref: '#/components/schemas/TableNotePart'
      - $ref: '#/components/schemas/TextBoxNotePart'
      - $ref: '#/components/schemas/CheckboxNotePart'
      - $ref: '#/components/schemas/ExternalFileNotePart'
      - $ref: '#/components/schemas/AssayRunNotePart'
      - $ref: '#/components/schemas/LookupTableNotePart'
      - $ref: '#/components/schemas/ResultsTableNotePart'
      - $ref: '#/components/schemas/RegistrationTableNotePart'
      - $ref: '#/components/schemas/PlateCreationTableNotePart'
      - $ref: '#/components/schemas/BoxCreationTableNotePart'
      - $ref: '#/components/schemas/MixturePrepTableNotePart'
      - $ref: '#/components/schemas/InventoryContainerTableNotePart'
      - $ref: '#/components/schemas/InventoryPlateTableNotePart'
      - $ref: '#/components/schemas/ChartNotePart'
      type: object
    EntryReviewProcess:
      properties:
        completionStatus:
          description: State of the Entry at the end of the Review Process
          enum:
          - APPROVED
          - COMPLETED
          - ACCEPTED
          - REVIEWED
          - WITNESSED
          - SELF_REVIEWED
          type: string
        id:
          description: ID of the Review Process
          type: string
        name:
          description: Name of the Review Process
          type: string
        stages:
          description: Array of Stages for the Review Process
          items:
            properties:
              actionLabel:
                description: Action reviewer is doing during the review
                enum:
                - APPROVE
                - COMPLETE
                - ACCEPT
                - REVIEW
                - WITNESS
                - SELF_REVIEW
                type: string
              id:
                description: ID of the Review Stage
                type: string
              name:
                description: Name of the Review Stage
                type: string
              reviewers:
                description: Reviewers for the Review Stage
                items:
                  allOf:
                  - $ref: '#/components/schemas/PartySummary'
                  - properties:
                      status:
                        description: Status of the Reviewer
                        enum:
                        - BLOCKED
                        - PENDING
                        - FINISHED
                        - REJECTED
                        type: string
                  type: object
                type: array
            type: object
          type: array
        type:
          description: Type of the Review Process
          enum:
          - SELF_REVIEW
          - SEQUENTIAL
          - PARALLEL
          type: string
      type: object
    EntrySchema:
      description: Entry schema
      properties:
        id:
          description: ID of the entry schema
          type: string
        modifiedAt:
          description: DateTime the Entry Schema was last modified
          example: '2017-04-18T05:55:48.685345+00:00'
          format: date-time
          type: string
        name:
          description: Name of the entry schema
          type: string
      type: object
    EntryTable:
      description: 'Actual tabular data with rows and columns of text on the note.

        '
      properties:
        columnLabels:
          description: 'Array of strings, with one item per column. Defaults to null,
            if the user is using the default, but is set if the user has given a custom
            name to the column.

            '
          items:
            nullable: true
            type: string
          type: array
        name:
          description: 'Name of the table - defaults to e.g. Table1 but can be renamed.

            '
          type: string
        rows:
          description: Array of row objects.
          items:
            $ref: '#/components/schemas/EntryTableRow'
          type: array
      type: object
    EntryTableCell:
      properties:
        link:
          allOf:
          - $ref: '#/components/schemas/EntryLink'
          description: 'A Link Resource if this cell contained a hyperlink. Otherwise,
            link will be omitted from the cell object. (Note: inventory and user types
            are not yet supported.)

            '
        text:
          description: 'The textual content of the cell. If the cell was originally
            a formula, this will be the evaluated version of the formula.

            '
          type: string
      type: object
    EntryTableRow:
      description: Each has property 'cells' that is an array of cell objects
      properties:
        cells:
          items:
            $ref: '#/components/schemas/EntryTableCell'
          type: array
      type: object
    EntryTemplate:
      additionalProperties: false
      description: 'Entry templates are templates that users can base new notebook
        entries off of.

        '
      properties:
        apiURL:
          description: The canonical url of the Entry Template in the API.
          example: https://benchling.com/api/v2/entry-templates/tmpl_tv7m7B78
          format: uri
          readOnly: true
          type: string
        createdAt:
          description: DateTime the template was created at
          format: date-time
          readOnly: true
          type: string
        creator:
          allOf:
          - $ref: '#/components/schemas/UserSummary'
          description: UserSummary Resource of the user who created the template
          readOnly: true
        customFields:
          $ref: '#/components/schemas/CustomFields'
        days:
          description: 'Array of day objects. Each day object has a day index (integer)
            and notes field (array of notes, expand further for details on note types).

            '
          items:
            $ref: '#/components/schemas/EntryTemplateDay'
          type: array
        fields:
          $ref: '#/components/schemas/Fields'
        id:
          description: ID of the entry template
          type: string
        modifiedAt:
          description: DateTime the template was last modified
          type: string
        name:
          description: Title of the template
          type: string
        schema:
          allOf:
          - $ref: '#/components/schemas/EntrySchema'
          description: Entry schema if set
          nullable: true
          title: SchemaProperty
          type: object
        templateCollectionId:
          description: ID of the collection that contains the template
          type: string
        webURL:
          description: URL of the template
          type: string
      type: object
    EntryTemplateDay:
      properties:
        day:
          description: 1 indexed day signifier. If 0 is returned, that means the EntryTemplateDay
            is a section with a title but no specified Day.
          minimum: 0
          type: integer
        notes:
          items:
            description: 'Notes are the main building blocks of entries. Each note
              corresponds roughly to a paragraph.

              '
            oneOf:
            - $ref: '#/components/schemas/SimpleNotePart'
            - $ref: '#/components/schemas/TableNotePart'
            - $ref: '#/components/schemas/TextBoxNotePart'
            - $ref: '#/components/schemas/CheckboxNotePart'
            - $ref: '#/components/schemas/ExternalFileNotePart'
            - $ref: '#/components/schemas/AssayRunNotePart'
            - $ref: '#/components/schemas/LookupTableNotePart'
            - $ref: '#/components/schemas/ResultsTableNotePart'
            - $ref: '#/components/schemas/RegistrationTableNotePart'
            - $ref: '#/components/schemas/PlateCreationTableNotePart'
            - $ref: '#/components/schemas/BoxCreationTableNotePart'
            - $ref: '#/components/schemas/MixturePrepTableNotePart'
            type: object
          type: array
        title:
          description: Optional title of a section if sections are enabled.
          nullable: true
          type: string
      type: object
    ExternalFileNotePart:
      allOf:
      - $ref: '#/components/schemas/BaseNotePart'
      - properties:
          externalFileId:
            description: 'The ID of the external file. Use the ''Get an external file''
              endpoint to retrieve metadata about it.

              '
            type: string
          links:
            description: 'Array of links referenced in the caption via an @-mention,
              hyperlink, or the drag-n-dropped preview attached to the note.

              '
            items:
              $ref: '#/components/schemas/EntryLink'
            type: array
          text:
            description: The caption of the file attachment.
            type: string
          type:
            enum:
            - external_file
            type: string
        type: object
      description: An attached user-uploaded file
    Field:
      properties:
        displayValue:
          nullable: true
          readOnly: true
          type: string
        isMulti:
          readOnly: true
          type: boolean
        textValue:
          example: Amp
          nullable: true
          readOnly: true
          type: string
        type:
          allOf:
          - $ref: '#/components/schemas/FieldType'
          readOnly: true
        unit:
          allOf:
          - $ref: '#/components/schemas/UnitSummary'
          nullable: true
        value:
          description: 'For single link fields, use the id of the item you want to
            link (eg. "seq_jdf8BV24").

            For multi-link fields, use an array of ids of the items you want to link
            (eg. ["seq_jdf8BV24"])

            '
          nullable: true
          oneOf:
          - type: string
          - type: boolean
          - type: number
          - type: object
          - items:
              type: string
            type: array
      required:
      - value
      type: object
    FieldConstraintsMixin:
      properties:
        isMulti:
          default: null
          description: Schema field's isMulti property, or null for either.
          nullable: true
          type: boolean
        isRequired:
          default: null
          description: Schema field's isRequired property, or null for either.
          nullable: true
          type: boolean
        type:
          $ref: '#/components/schemas/AppConfigFieldType'
      type: object
    FieldCreate:
      properties:
        fieldType:
          $ref: '#/components/schemas/FieldType'
        isMulti:
          type: boolean
        isParentLink:
          type: boolean
        isRequired:
          type: boolean
        name:
          type: string
      type: object
    FieldDefinition:
      allOf:
      - $ref: '#/components/schemas/FieldCreate'
      - $ref: '#/components/schemas/FieldSummary'
      type: object
    FieldDefinitionsManifest:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/BaseManifestConfig'
      - $ref: '#/components/schemas/FieldConstraintsMixin'
      - properties:
          requiredConfig:
            default: false
            nullable: false
            type: boolean
        type: object
      type: object
    FieldSummary:
      properties:
        archiveRecord:
          allOf:
          - $ref: '#/components/schemas/ArchiveRecord'
          nullable: true
        decimalPrecision:
          nullable: true
          type: string
        dropdownId:
          example: sfs_abcdefg
          type: string
        id:
          example: tsf_abcdefg
          type: string
        isComputed:
          type: boolean
        isConvertedFromLink:
          type: boolean
        isIntegration:
          type: boolean
        isSingleLink:
          type: boolean
        isSnapshot:
          type: boolean
        isUneditable:
          type: boolean
        legalTextDropdownId:
          nullable: true
          type: string
        link:
          nullable: true
          type: object
        numericMax:
          nullable: true
          type: string
        numericMin:
          nullable: true
          type: string
        strictSelector:
          type: boolean
        systemName:
          type: string
      type: object
    FieldType:
      enum:
      - dna_sequence_link
      - aa_sequence_link
      - custom_entity_link
      - entity_link
      - mixture_link
      - dropdown
      - part_link
      - translation_link
      - blob_link
      - text
      - long_text
      - batch_link
      - storage_link
      - entry_link
      - assay_request_link
      - assay_result_link
      - assay_run_link
      - boolean
      - float
      - integer
      - datetime
      - date
      - json
      type: string
    Fields:
      additionalProperties:
        $ref: '#/components/schemas/Field'
      type: object
    FinalizedAssembly:
      properties:
        bins:
          items:
            discriminator:
              mapping:
                CONSTANT: '#/components/schemas/AssemblyConstantBin'
                FRAGMENT: '#/components/schemas/AssemblyFragmentBin'
              propertyName: binType
            oneOf:
            - $ref: '#/components/schemas/AssemblyFragmentBin'
            - $ref: '#/components/schemas/AssemblyConstantBin'
          type: array
        constructs:
          additionalProperties: false
          properties:
            constructFragmentIds:
              items:
                description: Unique identifiers for fragments used to create the construct.
                type: string
              type: array
            constructPrimers:
              items:
                anyOf:
                - $ref: '#/components/schemas/AssemblyCreatedPrimer'
                - $ref: '#/components/schemas/AssemblyTransientPrimer'
                discriminator:
                  mapping:
                    BULK_ASSEMBLY_CREATED_PRIMER: '#/components/schemas/AssemblyCreatedPrimer'
                    BULK_ASSEMBLY_TRANSIENT_PRIMER: '#/components/schemas/AssemblyTransientPrimer'
                  propertyName: type
              type: array
            outputPolymer:
              $ref: '#/components/schemas/AssemblyPolymerReference'
          type: object
        fragments:
          items:
            $ref: '#/components/schemas/AssemblyFragmentShared'
          type: array
        method:
          discriminator:
            mapping:
              CONCATENATION: '#/components/schemas/AssemblyConcatenationMethod'
              GIBSON: '#/components/schemas/AssemblyGibsonMethod'
              GOLDEN_GATE: '#/components/schemas/AssemblyGoldenGateMethod'
              HOMOLOGY: '#/components/schemas/AssemblyHomologyMethod'
            propertyName: type
          oneOf:
          - $ref: '#/components/schemas/AssemblyGoldenGateMethod'
          - $ref: '#/components/schemas/AssemblyGibsonMethod'
          - $ref: '#/components/schemas/AssemblyHomologyMethod'
          - $ref: '#/components/schemas/AssemblyConcatenationMethod'
      type: object
    ForbiddenError:
      properties:
        error:
          properties:
            invalidId:
              type: string
            message:
              type: string
            type:
              type: string
            userMessage:
              type: string
          type: object
      type: object
    FormBarcodeValueReference:
      allOf:
      - $ref: '#/components/schemas/BarcodeQueryValuePart'
      - description: Query value part representing the literal value of the barocde
          scanned
        properties:
          type:
            enum:
            - BARCODE_VALUE
            type: string
        type: object
    FormDefinition:
      additionalProperties: false
      properties:
        id:
          example: fmdef_W7KgYydE
          type: string
        latestVersion:
          $ref: '#/components/schemas/FormDefinitionVersion'
        modifiedAt:
          description: Time when the definition was last modified. Will be updated
            when a new version becomes the default
          format: date-time
          type: string
        name:
          type: string
      type: object
    FormDefinitionVersion:
      allOf:
      - $ref: '#/components/schemas/BaseFormDefinitionVersion'
      - properties:
          id:
            description: API ID of this version
            example: fmdefv_d0dcjF0
            type: string
        type: object
    FormDefinitionsPaginatedList:
      additionalProperties: false
      properties:
        formDefinitions:
          items:
            $ref: '#/components/schemas/FormDefinition'
          type: array
        nextToken:
          type: string
      type: object
    FormFieldValueReference:
      allOf:
      - $ref: '#/components/schemas/BarcodeQueryValuePart'
      - description: Query value part representing a raw string value
        properties:
          key:
            type: string
          type:
            enum:
            - FORM_FIELD_VALUE
            type: string
        type: object
    FormRawStringQueryValuePart:
      allOf:
      - $ref: '#/components/schemas/BarcodeQueryValuePart'
      - description: Query value part representing a raw string value
        properties:
          type:
            enum:
            - RAW_STRING
            type: string
          value:
            type: string
        type: object
    FreeFormTextFormField:
      allOf:
      - $ref: '#/components/schemas/BaseFormField'
      - description: Form Field enabling input of free form text
        properties:
          cannedResponses:
            additionalProperties: false
            properties:
              behavior:
                enum:
                - ADDITIVE
                - REPLACE
                type: string
              values:
                items:
                  type: string
                type: array
            type: object
          defaultKeyboard:
            enum:
            - NUMERIC
            - DEFAULT
            type: string
          numberOfLines:
            maximum: 10
            minimum: 1
            type: number
          type:
            description: 'The type of this form field. Type declares how this field
              behaves and dictates the additional properties passed along with the
              required properties like label and key

              '
            enum:
            - FREE_FORM_TEXT
            type: string
        type: object
    InitialTable:
      additionalProperties: false
      properties:
        csvData:
          description: blobId of data
          type: string
        templateTableID:
          description: Template table API id
          type: string
      type: object
    InstanceProvider:
      additionalProperties: false
      discriminator:
        mapping:
          BARCODE_SCAN: '#/components/schemas/BarcodeScanFormInstanceProvider'
          BLANK_FORM: '#/components/schemas/NewBlankFormInstanceProvider'
          ENTITY_SEARCH: '#/components/schemas/EntitySearchInstanceProvider'
        propertyName: type
      type: object
    InventoryContainerTableNotePart:
      allOf:
      - $ref: '#/components/schemas/BaseNotePart'
      - $ref: '#/components/schemas/StructuredTableApiIdentifiers'
      - properties:
          destinationContainerSchemaId:
            example: consch_JEL0WCBK
            type: string
          mode:
            enum:
            - create_and_fill
            - fill
            - update
            type: string
          type:
            enum:
            - inventory_container_table
            type: string
        type: object
    InventoryPlateTableNotePart:
      allOf:
      - $ref: '#/components/schemas/BaseNotePart'
      - $ref: '#/components/schemas/StructuredTableApiIdentifiers'
      - properties:
          destinationPlateSchemaId:
            example: pltsch_LRIuH0yJ
            nullable: true
            type: string
          destinationWellSchemaId:
            example: consch_JEL0WCBK
            type: string
          mode:
            enum:
            - create_and_fill
            - fill
            - update
            type: string
          type:
            enum:
            - inventory_plate_table
            type: string
        type: object
    LookupTableNotePart:
      allOf:
      - $ref: '#/components/schemas/StructuredTableApiIdentifiers'
      - properties:
          type:
            enum:
            - lookup_table
            type: string
        type: object
    ManifestArrayConfig:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/BaseManifestConfig'
      - properties:
          defaultElementName:
            type: string
          elementDefinition:
            items:
              anyOf:
              - $ref: '#/components/schemas/SchemaDependency'
              - $ref: '#/components/schemas/EntitySchemaDependency'
              - $ref: '#/components/schemas/WorkflowTaskSchemaDependency'
              - $ref: '#/components/schemas/DropdownDependency'
              - $ref: '#/components/schemas/ResourceDependency'
              - $ref: '#/components/schemas/ManifestScalarConfig'
            type: array
          maxElements:
            maximum: 500
            minimum: 1
            type: integer
          minElements:
            maximum: 500
            minimum: 0
            type: integer
          type:
            enum:
            - array
            type: string
        type: object
      - required:
        - type
        - elementDefinition
      type: object
    ManifestBooleanScalarConfig:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/BaseManifestScalarConfig'
      - properties:
          type:
            enum:
            - boolean
            example: boolean
            type: string
      - required:
        - type
      type: object
    ManifestDateScalarConfig:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/BaseManifestScalarConfig'
      - properties:
          type:
            enum:
            - date
            example: date
            type: string
      - required:
        - type
      type: object
    ManifestDatetimeScalarConfig:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/BaseManifestScalarConfig'
      - properties:
          type:
            enum:
            - datetime
            example: datetime
            type: string
      - required:
        - type
      type: object
    ManifestFloatScalarConfig:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/BaseManifestScalarConfig'
      - properties:
          enum:
            items:
              format: float
              type: number
            type: array
          type:
            enum:
            - float
            example: float
            type: string
      - required:
        - type
      type: object
    ManifestIntegerScalarConfig:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/BaseManifestScalarConfig'
      - properties:
          enum:
            items:
              type: integer
            type: array
          type:
            enum:
            - integer
            example: integer
            type: string
      - required:
        - type
      type: object
    ManifestJsonScalarConfig:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/BaseManifestScalarConfig'
      - properties:
          type:
            enum:
            - json
            example: json
            type: string
      - required:
        - type
      type: object
    ManifestScalarConfig:
      discriminator:
        mapping:
          boolean: '#/components/schemas/ManifestBooleanScalarConfig'
          date: '#/components/schemas/ManifestDateScalarConfig'
          datetime: '#/components/schemas/ManifestDatetimeScalarConfig'
          float: '#/components/schemas/ManifestFloatScalarConfig'
          integer: '#/components/schemas/ManifestIntegerScalarConfig'
          json: '#/components/schemas/ManifestJsonScalarConfig'
          secure_text: '#/components/schemas/ManifestSecureTextScalarConfig'
          text: '#/components/schemas/ManifestTextScalarConfig'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/ManifestTextScalarConfig'
      - $ref: '#/components/schemas/ManifestFloatScalarConfig'
      - $ref: '#/components/schemas/ManifestIntegerScalarConfig'
      - $ref: '#/components/schemas/ManifestBooleanScalarConfig'
      - $ref: '#/components/schemas/ManifestDateScalarConfig'
      - $ref: '#/components/schemas/ManifestDatetimeScalarConfig'
      - $ref: '#/components/schemas/ManifestSecureTextScalarConfig'
      - $ref: '#/components/schemas/ManifestJsonScalarConfig'
      type: object
    ManifestSecureTextScalarConfig:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/BaseManifestScalarConfig'
      - properties:
          type:
            enum:
            - secure_text
            example: secure_text
            type: string
      - required:
        - type
      type: object
    ManifestTextScalarConfig:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/BaseManifestScalarConfig'
      - properties:
          enum:
            items:
              type: string
            type: array
          type:
            enum:
            - text
            example: text
            type: string
      - required:
        - type
      type: object
    MessageSubscriptionWebhookV2Beta:
      allOf:
      - properties:
          type:
            $ref: '#/components/schemas/MessageTypeWebhookV2Beta'
        required:
        - type
        type: object
    MessageTypeWebhookV2Beta:
      description: The event that the app is subscribed to.
      enum:
      - v2.assayRun.created
      - v2.assayRun.updated.fields
      - v2.entity.registered
      - v2.entry.created
      - v2.entry.updated.fields
      - v2.entry.updated.reviewRecord
      - v2.request.created
      - v2.request.updated.fields
      - v2.request.updated.status
      - v2.workflowTaskGroup.created
      - v2.workflowTaskGroup.mappingCompleted
      - v2.workflowTaskGroup.updated.watchers
      - v2.workflowTask.created
      - v2.workflowTask.updated.assignee
      - v2.workflowTask.updated.scheduledOn
      - v2.workflowTask.updated.status
      - v2.workflowTask.updated.fields
      - v2.workflowOutput.created
      - v2.workflowOutput.updated.fields
      - v2.canvas.userInteracted
      - v2.canvas.initialized
      - v2.app.activateRequested
      - v2.app.deactivated
      - v2.app.installed
      - v2-beta.app.configuration.updated
      type: string
    MixturePrepTableNotePart:
      allOf:
      - $ref: '#/components/schemas/BaseNotePart'
      - $ref: '#/components/schemas/StructuredTableApiIdentifiers'
      - properties:
          mixtureSchemaId:
            example: ts_eGNPfqCX
            type: string
          type:
            enum:
            - mixture_prep_table
            type: string
        type: object
    NameTemplatePart:
      properties:
        datetimeFormat:
          nullable: true
          type: string
        fieldId:
          nullable: true
          type: string
        text:
          nullable: true
          type: string
        type:
          type: string
      type: object
    NamingStrategy:
      description: 'Specifies the behavior for automatically generated names when
        registering an entity.

        - NEW_IDS: Generate new registry IDs

        - IDS_FROM_NAMES: Generate registry IDs based on entity names

        - DELETE_NAMES: Generate new registry IDs and replace name with registry ID

        - SET_FROM_NAME_PARTS: Generate new registry IDs, rename according to name
        template, and keep old name as alias

        - REPLACE_NAMES_FROM_PARTS: Generate new registry IDs, and replace name according
        to name template

        - KEEP_NAMES: Keep existing entity names as registry IDs

        - REPLACE_ID_AND_NAME_FROM_PARTS: Generate registry IDs and names according
        to name template

        '
      enum:
      - NEW_IDS
      - IDS_FROM_NAMES
      - DELETE_NAMES
      - SET_FROM_NAME_PARTS
      - REPLACE_NAMES_FROM_PARTS
      - KEEP_NAMES
      - REPLACE_ID_AND_NAME_FROM_PARTS
      type: string
    NestedFormDefinition:
      additionalProperties: false
      properties:
        fields:
          description: 'Each element defines a field in our form. Form fields are
            composed of a set of attributes at the top level, and a polymorphic set
            of attributes under the properties attribute. The specific properties
            that can be passed to a form field are unique to whatever is set in the
            type attribute. For example, a form field of type STRING_SELECTION will
            have an attribute within properties of options; however, this options
            attribute does not make sense for a form field of type ENTITY_LINK.

            '
          items:
            anyOf:
            - $ref: '#/components/schemas/StringSelectFormField'
            - $ref: '#/components/schemas/FreeFormTextFormField'
            - $ref: '#/components/schemas/DateSelectionFormField'
            - $ref: '#/components/schemas/EntityLinkFormField'
            - $ref: '#/components/schemas/BarcodeFormField'
          type: array
      type: object
    NestedFormField:
      allOf:
      - $ref: '#/components/schemas/BaseFormField'
      - description: Form Field that represents a nested sub-form
        properties:
          definition:
            $ref: '#/components/schemas/NestedFormDefinition'
          instanceProviders:
            description: 'Form instance declare how users can generate new instances
              of nested forms within a nested form field. The most obvious way to
              do this is just to add a new blank form; however, very often we want
              to describe behavior like everytime I scan a barcode, please add a new
              instance of this nested form with that barcode being resolved to an
              entity in a specific field.

              '
            items:
              anyOf:
              - $ref: '#/components/schemas/BarcodeScanFormInstanceProvider'
              - $ref: '#/components/schemas/EntitySearchFormInstanceProvider'
              - $ref: '#/components/schemas/NewBlankFormInstanceProvider'
            type: array
          type:
            description: 'The type of this form field. Type declares how this field
              behaves and dictates the additional properties passed along with the
              required properties like label and key

              '
            enum:
            - FORM
            type: string
        type: object
    NewBlankFormInstanceProvider:
      allOf:
      - $ref: '#/components/schemas/InstanceProvider'
      - additionalProperties: false
        description: Form instance provider that simply instantiates new, blank instances
          of a nested form
        properties:
          type:
            enum:
            - BLANK_FORM
            type: string
        type: object
    NotFoundError:
      properties:
        error:
          allOf:
          - $ref: '#/components/schemas/BaseError'
          - properties:
              invalidId:
                type: string
              type:
                enum:
                - invalid_request_error
                type: string
      type: object
    Oligo:
      discriminator:
        mapping:
          DNA: DnaOligo
          RNA: RnaOligo
        propertyName: nucleotideType
      properties:
        aliases:
          description: Array of aliases
          items:
            type: string
          type: array
        apiURL:
          description: The canonical url of the Oligo in the API.
          format: uri
          readOnly: true
          type: string
        archiveRecord:
          allOf:
          - $ref: '#/components/schemas/ArchiveRecord'
          nullable: true
        bases:
          description: Base pairs of the Oligo.
          example: ACTTTTT
          type: string
        createdAt:
          description: DateTime the Oligo was created.
          format: date-time
          readOnly: true
          type: string
        creator:
          $ref: '#/components/schemas/UserSummary'
        customFields:
          allOf:
          - $ref: '#/components/schemas/CustomFields'
          description: Custom fields set on the Oligo.
        entityRegistryId:
          description: Registry ID of the Oligo if registered.
          nullable: true
          type: string
        fields:
          $ref: '#/components/schemas/Fields'
        folderId:
          description: ID of the folder that contains the Oligo.
          nullable: true
          type: string
        id:
          description: ID of the Oligo.
          example: seq_bhuDUw9D
          type: string
        length:
          description: Number of bases in the Oligo.
          type: integer
        modifiedAt:
          description: DateTime the Oligo was last modified.
          format: date-time
          readOnly: true
          type: string
        name:
          description: Name of the Oligo.
          type: string
        nucleotideType:
          description: Nucleotide type of the Oligo.
          enum:
          - DNA
          - RNA
          type: string
        registrationOrigin:
          allOf:
          - $ref: '#/components/schemas/RegistrationOrigin'
          nullable: true
          readOnly: true
        registryId:
          description: Registry the Oligo is registered in.
          nullable: true
          type: string
        schema:
          allOf:
          - $ref: '#/components/schemas/SchemaSummary'
          nullable: true
        webURL:
          description: URL of the Oligo.
          example: https://benchling.com/benchling/f/lib_hBHqKbzE-oligos/seq_bhuDUw9D-test-oligo-abc/edit
          format: uri
          readOnly: true
          type: string
      type: object
    OligoBaseRequest:
      properties:
        aliases:
          description: Aliases to add to the Oligo
          items:
            type: string
          type: array
        authorIds:
          description: IDs of users to set as the Oligo's authors.
          items:
            type: string
          type: array
        bases:
          description: 'Base pairs of the oligo.

            '
          type: string
        customFields:
          allOf:
          - $ref: '#/components/schemas/CustomFields'
          description: 'Custom fields to add to the Oligo. Every field should have
            its name as a key, mapping to an object with information about the value
            of the field.

            '
        fields:
          allOf:
          - $ref: '#/components/schemas/Fields'
          description: 'Fields to set on the Oligo. Must correspond with the schema''s
            field definitions. Every field should have its name as a key, mapping
            to an object with information about the value of the field.

            '
        folderId:
          description: 'ID of the folder containing the Oligo.

            '
          type: string
        name:
          description: 'Name of the Oligo.

            '
          type: string
        schemaId:
          description: 'ID of the oligo''s schema.

            '
          type: string
      type: object
    OligoBaseRequestForCreate:
      allOf:
      - $ref: '#/components/schemas/OligoBaseRequest'
      - required:
        - bases
        - name
    OligoCreate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/OligoBaseRequestForCreate'
      - $ref: '#/components/schemas/CreateEntityIntoRegistry'
    OligoCreateHelm:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/OligoCreate'
      - properties:
          helm:
            description: Representation of the oligo in HELM syntax, including any
              chemical modifications
            example: RNA1{r(A)p.r([impr2G])p.r(G)[Ssp].r(A)p.r(T)p.r(T)p}$$$$V2.0
            type: string
      - required:
        - folderId
        - name
    OligoUpdate:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/OligoBaseRequest'
    OligoUpdateHelm:
      allOf:
      - $ref: '#/components/schemas/OligoUpdate'
      - properties:
          helm:
            description: Representation of the oligo in HELM syntax, including any
              chemical modifications
            example: RNA1{r(A)p.r([impr2G])p.r(G)[Ssp].r(A)p.r(T)p.r(T)p}$$$$V2.0
            type: string
    OrgMembershipCollaborator:
      properties:
        organization:
          $ref: '#/components/schemas/OrganizationSummary'
        role:
          enum:
          - ADMIN
          - MEMBER
          type: string
        type:
          enum:
          - ORGANIZATION_MEMBERSHIP
          type: string
    OrganizationSummary:
      properties:
        handle:
          type: string
        id:
          type: string
        name:
          type: string
      type: object
    Pagination:
      properties:
        nextToken:
          type: string
    PartySummary:
      properties:
        handle:
          type: string
        id:
          type: string
        name:
          type: string
      type: object
    PlateCreationTableNotePart:
      allOf:
      - $ref: '#/components/schemas/BaseNotePart'
      - $ref: '#/components/schemas/StructuredTableApiIdentifiers'
      - properties:
          plateSchemaId:
            example: pltsch_LRIuH0yJ
            type: string
          type:
            enum:
            - plate_creation_table
            type: string
        type: object
    PolicyStatement:
      properties:
        access:
          type: string
        description:
          type: string
    RegistrationOrigin:
      properties:
        originEntryId:
          nullable: true
          readOnly: true
          type: string
        registeredAt:
          format: date-time
          readOnly: true
          type: string
      type: object
    RegistrationTableNotePart:
      allOf:
      - $ref: '#/components/schemas/BaseNotePart'
      - $ref: '#/components/schemas/StructuredTableApiIdentifiers'
      - properties:
          entitySchemaId:
            example: ts_hMbJPSA8
            type: string
          type:
            enum:
            - registration_table
            type: string
        type: object
    ResourceDependency:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/BaseManifestConfig'
      - properties:
          requiredConfig:
            default: false
            nullable: false
            type: boolean
          type:
            $ref: '#/components/schemas/ResourceDependencyTypes'
        type: object
      - required:
        - type
      type: object
    ResourceDependencyTypes:
      enum:
      - aa_sequence
      - box
      - container
      - custom_entity
      - dna_oligo
      - dna_sequence
      - entry
      - folder
      - location
      - mixture
      - molecule
      - plate
      - project
      - registry
      - rna_oligo
      - rna_sequence
      - workflow_task_status
      - worklist
      type: string
    ResultsTableNotePart:
      allOf:
      - $ref: '#/components/schemas/BaseNotePart'
      - $ref: '#/components/schemas/StructuredTableApiIdentifiers'
      - properties:
          assayResultSchemaId:
            example: assaysch_msh1Ly6g
            type: string
          type:
            enum:
            - results_table
            type: string
        type: object
    RnaAnnotation:
      allOf:
      - $ref: '#/components/schemas/SequenceFeatureBase'
      - properties:
          end:
            description: 0-based exclusive end index. The end of the sequence is always
              represented as 0.
            type: integer
          start:
            description: 0-based inclusive start index.
            type: integer
          strand:
            example: 1
            maximum: 1
            minimum: 0
            type: integer
          type:
            type: string
        type: object
    RnaOligo:
      allOf:
      - $ref: '#/components/schemas/Oligo'
      - properties:
          annotations:
            description: Annotations on the Oligo.
            items:
              $ref: '#/components/schemas/RnaAnnotation'
            type: array
          apiURL:
            example: https://benchling.com/api/v2/rna-oligos/seq_bhuDUw9D
            type: string
          bases:
            example: ACUUUUU
            type: string
          customNotation:
            description: Representation of the oligo in the custom notation specified
              in the request. Null if no notation was specified.
            nullable: true
            type: string
          customNotationName:
            description: Name of the custom notation specified in the request. Null
              if no notation was specified.
            nullable: true
            type: string
          helm:
            description: Representation of the oligo in HELM syntax, including any
              chemical modifications
            example: RNA1{r(A)p.r(C)[Ssp].r(U)p.r(U)p.r(U)p.r(U)p.r(U)p}$$$$V2.0
            type: string
          nucleotideType:
            example: RNA
            type: string
    RnaOligoHelm:
      allOf:
      - $ref: '#/components/schemas/RnaOligo'
      - properties:
          helm:
            description: Representation of the oligo in HELM syntax, including any
              chemical modifications
            example: RNA1{r(A)p.r(C)[Ssp].r(U)p.r(U)p.r(U)p.r(U)p.r(U)p}$$$$V2.0
            type: string
    SchemaBaseDependency:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/BaseManifestConfig'
      - properties:
          fieldDefinitions:
            items:
              allOf:
              - $ref: '#/components/schemas/FieldDefinitionsManifest'
            type: array
          requiredConfig:
            default: false
            nullable: false
            type: boolean
        type: object
      type: object
    SchemaClass:
      properties:
        archiveRecord:
          allOf:
          - $ref: '#/components/schemas/ArchiveRecord'
          nullable: true
        createdAt:
          format: date-time
          type: string
        id:
          type: string
        modifiedAt:
          format: date-time
          type: string
        name:
          type: string
      type: object
    SchemaClassesList:
      properties:
        schemaClasses:
          items:
            $ref: '#/components/schemas/SchemaClass'
          readOnly: true
          type: array
      type: object
    SchemaClassesPaginatedList:
      allOf:
      - $ref: '#/components/schemas/SchemaClassesList'
      - properties:
          nextToken:
            type: string
        type: object
    SchemaDependency:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/SchemaBaseDependency'
      - properties:
          type:
            $ref: '#/components/schemas/SchemaDependencyTypes'
        type: object
      - required:
        - type
      type: object
    SchemaDependencySubtypes:
      enum:
      - aa_sequence
      - dna_sequence
      - custom_entity
      - mixture
      - molecule
      - dna_oligo
      - rna_oligo
      - rna_sequence
      type: string
    SchemaDependencyTypes:
      enum:
      - container_schema
      - plate_schema
      - location_schema
      - box_schema
      - run_schema
      - result_schema
      - request_schema
      - entry_schema
      - workflow_task_schema
      type: string
    SchemaFieldsQueryParam:
      additionalProperties: true
      example:
        schemaField.Cell Count: '>= 10 AND <= 50'
        schemaField.Experiment: MyExperiment
        schemaField.Started On: <= 2023-05-23T00:00:00Z
      type: object
    SchemaSummary:
      properties:
        id:
          type: string
        name:
          type: string
      type: object
    SequenceFeatureBase:
      properties:
        color:
          description: Hex color code used when displaying this feature in the UI.
          example: '#F58A5E'
          type: string
        customFields:
          items:
            $ref: '#/components/schemas/SequenceFeatureCustomField'
          maxItems: 100
          type: array
        name:
          maxLength: 2048
          type: string
        notes:
          example: Cong et al Science. 2013 Jan 3.
          maxLength: 10000
          type: string
      type: object
    SequenceFeatureCustomField:
      description: A name and value pair associated with a sequence feature (annotation
        or translation). For genbank imports, these are the qualifiers associated
        with each feature.
      properties:
        name:
          description: Name of the custom field
          type: string
        value:
          description: Value of the custom field
          type: string
      type: object
    SimpleNotePart:
      allOf:
      - $ref: '#/components/schemas/BaseNotePart'
      - properties:
          links:
            description: 'Array of links referenced in text via an @-mention, hyperlink,
              or the drag-n-dropped preview attached to the note.

              '
            items:
              $ref: '#/components/schemas/EntryLink'
            type: array
          text:
            description: The textual contents of the note.
            type: string
          type:
            enum:
            - text
            - code
            - list_bullet
            - list_number
            type: string
        type: object
      description: 'Simple note parts include the following types: - ''text'': plain
        text - ''code'': preformatted code block - ''list_bullet'': one "line" of
        a bulleted list - ''list_number'': one "line" of a numbered list

        '
    StageEntry:
      additionalProperties: false
      description: A notebook entry used for execution of one or more stage runs in
        a legacy workflow.
      properties:
        apiURL:
          description: The canonical url of the Entry in the API.
          example: https://benchling.com/api/v2-alpha/stage-entries/stgentr_1HEcejZq
          format: uri
          readOnly: true
          type: string
        assignedReviewers:
          description: 'Array of users assigned to review the stage entry, if any.

            '
          items:
            $ref: '#/components/schemas/UserSummary'
          type: array
        authors:
          description: 'Array of UserSummary Resources of the authors of the stage
            entry. This defaults to the creator but can be manually changed.

            '
          items:
            $ref: '#/components/schemas/UserSummary'
          type: array
        createdAt:
          description: DateTime the stage entry was created at
          format: date-time
          readOnly: true
          type: string
        creator:
          allOf:
          - $ref: '#/components/schemas/UserSummary'
          description: UserSummary Resource of the user who created the stage entry
          readOnly: true
        customFields:
          $ref: '#/components/schemas/CustomFields'
        days:
          description: 'Array of day objects. Each day object has a date field (string)
            and notes field (array of notes, expand further for details on note types).

            '
          items:
            $ref: '#/components/schemas/EntryDay'
          type: array
        displayId:
          description: User-friendly ID of the stage entry
          type: string
        fields:
          $ref: '#/components/schemas/Fields'
        folderId:
          description: ID of the folder that contains the stage entry
          type: string
        id:
          description: ID of the stage entry
          type: string
        modifiedAt:
          description: DateTime the stage entry was last modified
          type: string
        name:
          description: Title of the stage entry
          type: string
        reviewRecord:
          description: Review record if set
          nullable: true
          type: object
        schema:
          allOf:
          - $ref: '#/components/schemas/EntrySchema'
          description: Entry schema if set
          nullable: true
          title: SchemaProperty
          type: object
        webURL:
          description: URL of the stage entry
          type: string
        workflowId:
          description: ID of the parent workflow
          example: wfw_7COQmok7
          type: string
        workflowStageId:
          description: ID of the associated workflow stage
          example: wfwstg_EZuryAiW
          type: string
      type: object
    StringSelectFormField:
      allOf:
      - $ref: '#/components/schemas/BaseFormField'
      - description: Form Field enabling selection of a pre-defined set of strings
        properties:
          formFactor:
            enum:
            - CLOUD_SELECT
            - SELECT_MENU
            type: string
          maxSelections:
            minimum: 1
            type: integer
          options:
            items:
              $ref: '#/components/schemas/StringSelectFormFieldOption'
            type: array
          type:
            description: 'The type of this form field. Type declares how this field
              behaves and dictates the additional properties passed along with the
              required properties like label and key

              '
            enum:
            - STRING_SELECTION
            type: string
        type: object
    StringSelectFormFieldOption:
      additionalProperties: false
      properties:
        name:
          type: string
        value:
          type: string
      type: object
    StructuredTableApiIdentifiers:
      properties:
        apiId:
          type: string
        columns:
          items:
            $ref: '#/components/schemas/StructuredTableColumnInfo'
          type: array
      type: object
    StructuredTableColumnInfo:
      properties:
        columnId:
          type: string
        isReadOnly:
          type: boolean
        name:
          type: string
      type: object
    StudiesArchivalChange:
      description: 'IDs of all items that were archived or unarchived.

        '
      properties:
        studyIds:
          items:
            type: string
          type: array
      type: object
    StudiesArchive:
      additionalProperties: false
      description: 'The request body for archiving Studies.

        '
      properties:
        reason:
          description: 'The reason for archiving the provided Studies. Accepted reasons
            may differ based on tenant configuration.

            '
          enum:
          - Made in error
          - Retired
          - Expended
          - Shipped
          - Contaminated
          - Expired
          - Missing
          - Other
          type: string
        studyIds:
          items:
            type: string
          type: array
      required:
      - reason
      - studyIds
      type: object
    StudiesBulkCreateRequest:
      additionalProperties: false
      properties:
        studies:
          items:
            $ref: '#/components/schemas/StudyCreate'
          maxItems: 1000
          type: array
      type: object
    StudiesBulkCreateResponse:
      properties:
        studies:
          description: The created studies
          items:
            $ref: '#/components/schemas/Study'
          type: array
      type: object
    StudiesBulkUpdateRequest:
      additionalProperties: false
      properties:
        studies:
          items:
            $ref: '#/components/schemas/StudyUpdate'
          type: array
      type: object
    StudiesBulkUpdateResponse:
      properties:
        studies:
          description: The studies to update
          items:
            $ref: '#/components/schemas/Study'
          type: array
      type: object
    StudiesPaginatedList:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - properties:
          studies:
            items:
              $ref: '#/components/schemas/Study'
            type: array
    StudiesUnarchive:
      additionalProperties: false
      description: 'The request body for unarchiving Studies.

        '
      properties:
        studyIds:
          items:
            type: string
          type: array
      required:
      - studyIds
      type: object
    Study:
      additionalProperties: false
      properties:
        archiveRecord:
          allOf:
          - $ref: '#/components/schemas/ArchiveRecord'
          nullable: true
        authors:
          items:
            $ref: '#/components/schemas/UserSummary'
          type: array
        createdAt:
          description: DateTime the Study was created.
          format: date-time
          readOnly: true
          type: string
        creator:
          $ref: '#/components/schemas/UserSummary'
        description:
          description: The description of the Study.
          maxLength: 2048
          nullable: true
          readOnly: true
          type: string
        designEntryId:
          description: The ID of the design entry associated with the Study.
          readOnly: true
          type: string
        fields:
          allOf:
          - $ref: '#/components/schemas/Fields'
          description: 'Fields to set on the Study. Must correspond with the schema''s
            field definitions. Every field should have its name as a key, mapping
            to an object with information about the value of the field.

            '
        folderId:
          description: ID of the folder that contains the Study.
          type: string
        id:
          description: ID of the Study.
          example: stdy_bhuDUw9D
          type: string
        modifiedAt:
          description: DateTime the Study was last modified.
          format: date-time
          readOnly: true
          type: string
        name:
          description: Name of the Study.
          maxLength: 255
          type: string
        phase:
          description: The phase of the Study.
          enum:
          - DESIGN
          - EXECUTION
          - COMPLETE
          readOnly: true
          type: string
        studySchemaId:
          description: The ID of the Study's schema.
          readOnly: true
          type: string
        webURL:
          description: URL of the Study.
          example: https://benchling.com/benchling/f/lib_R8KcsjhW-studies/stdy_xCUXNVyG-study1/edit
          format: uri
          readOnly: true
          type: string
      type: object
    StudyCreate:
      allOf:
      - properties:
          description:
            description: The description of the Study.
            readOnly: true
            type: string
          entryInformation:
            $ref: '#/components/schemas/EntryCreate'
          fields:
            $ref: '#/components/schemas/Fields'
          folderId:
            description: ID of the folder that contains the Study.
            type: string
          name:
            description: Name of the Study.
            type: string
          studySchemaId:
            description: The ID of the Study's schema.
            type: string
      - required:
        - name
        - folderId
        - studySchemaId
        - entryInformation
        - fields
    StudyItem:
      additionalProperties: false
      properties:
        id:
          type: string
      type: object
    StudyItems:
      additionalProperties: false
      properties:
        items:
          items:
            $ref: '#/components/schemas/StudyItem'
          type: array
      type: object
    StudyItemsCreateRequest:
      additionalProperties: false
      properties:
        itemIds:
          items:
            type: string
          maxItems: 1000
          type: array
      type: object
    StudyItemsCreateResponse:
      properties:
        items:
          description: The created study items
          items:
            $ref: '#/components/schemas/StudyItem'
          type: array
      type: object
    StudyItemsDeleteRequest:
      additionalProperties: false
      properties:
        itemIds:
          items:
            type: string
          maxItems: 1000
          type: array
      type: object
    StudyUpdate:
      allOf:
      - properties:
          archiveReason:
            example: Made in error
            type: string
          description:
            description: The description of the Study.
            type: string
          fields:
            $ref: '#/components/schemas/Fields'
          folderId:
            description: ID of the folder that contains the Study.
            type: string
          id:
            example: stdy_VFvwv7JV
            type: string
          isArchived:
            type: boolean
          name:
            description: Name of the Study.
            example: Study 1
            type: string
          phase:
            description: The phase of the Study.
            enum:
            - DESIGN
            - EXECUTION
            - COMPLETE
            type: string
      type: object
    TableNotePart:
      allOf:
      - $ref: '#/components/schemas/BaseNotePart'
      - properties:
          links:
            description: 'Array of links referenced in the caption via an @-mention,
              hyperlink, or the drag-n-dropped preview attached to the note.

              '
            items:
              $ref: '#/components/schemas/EntryLink'
            type: array
          table:
            allOf:
            - $ref: '#/components/schemas/EntryTable'
            type: object
          text:
            description: The caption of the table.
            type: string
          type:
            enum:
            - table
            type: string
        type: object
      description: A table with rows and columns of text
    TeamMembershipCollaborator:
      properties:
        role:
          enum:
          - ADMIN
          - MEMBER
          type: string
        team:
          $ref: '#/components/schemas/TeamSummary'
        type:
          enum:
          - TEAM_MEMBERSHIP
          type: string
    TeamSummary:
      allOf:
      - type: object
      - properties:
          id:
            type: string
          name:
            type: string
      - example:
          id: team_5cjIguqc
          name: Elion's Team
    TextBoxNotePart:
      allOf:
      - $ref: '#/components/schemas/BaseNotePart'
      - properties:
          links:
            description: 'Array of links referenced via an @-mention, hyperlink, or
              the drag-n-dropped preview attached to the note.

              '
            items:
              $ref: '#/components/schemas/EntryLink'
            type: array
          name:
            type: string
          text:
            type: string
          type:
            enum:
            - text_box
            type: string
        type: object
    Unit:
      properties:
        aliases:
          items:
            type: string
          type: array
        archiveRecord:
          allOf:
          - $ref: '#/components/schemas/ArchiveRecord'
          nullable: true
        conversionFactor:
          description: A decimal string relating this unit to its type's base unit
          example: '1000'
          type: string
        id:
          example: unit_NyKvCSBC
          type: string
        name:
          example: kilometer
          type: string
        symbol:
          example: km
          type: string
      type: object
    UnitSummary:
      properties:
        id:
          example: unit_NyKvCSBC
          type: string
        name:
          example: meter
          type: string
        symbol:
          example: m
          type: string
        unitTypeId:
          example: qnty_7W2R1EFJ
          type: string
      type: object
    UnitType:
      properties:
        baseUnit:
          $ref: '#/components/schemas/Unit'
        id:
          example: qnty_7W2R1EFJ
          type: string
        name:
          example: Length
          type: string
        terms:
          items:
            $ref: '#/components/schemas/UnitTypeTerm'
          type: array
        units:
          items:
            $ref: '#/components/schemas/Unit'
          type: array
      type: object
    UnitTypeTerm:
      properties:
        exponent:
          type: integer
        value:
          enum:
          - TIME
          - LENGTH
          - MASS
          - CURRENT
          - TEMPERATURE
          - AMOUNT
          - LUMINOUS_INTENSITY
          type: string
      type: object
    UserCollaborator:
      allOf:
      - properties:
          type:
            enum:
            - USER
            type: string
      - $ref: '#/components/schemas/UserSummary'
      type: object
    UserSummary:
      allOf:
      - $ref: '#/components/schemas/PartySummary'
      - example:
          handle: lpasteur
          id: ent_a0SApq3z
          name: Louis Pasteur
    UserValidation:
      properties:
        validationComment:
          description: A string explaining the reason for the provided validation
            status.
          type: string
        validationStatus:
          description: 'Valid values for this enum depend on whether it is used to
            set a value (e.g., in a POST request), or is a return value for an existing
            result.

            Acceptable values for setting a status are ''VALID'' or ''INVALID''. Possible
            return values are ''VALID'', ''INVALID'', or ''PARTIALLY_VALID'' (a result
            will be partially valid if it has some valid fields and some invalid fields).

            '
          enum:
          - VALID
          - INVALID
          - PARTIALLY_VALID
          type: string
      type: object
    WorkflowTaskSchemaDependency:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/SchemaBaseDependency'
      - properties:
          output:
            properties:
              fieldDefinitions:
                items:
                  allOf:
                  - $ref: '#/components/schemas/FieldDefinitionsManifest'
                type: array
            type: object
          type:
            enum:
            - workflow_task_schema
            type: string
        type: object
      - required:
        - type
      type: object
  securitySchemes:
    basicApiKeyAuth:
      description: Use issued API key for standard access to the API
      scheme: basic
      type: http
    basicClientIdSecretAuth:
      description: Auth used as part of client credentials OAuth flow prior to receiving
        a bearer token.
      scheme: basic
      type: http
    oAuth:
      description: OAuth2 Client Credentials flow intended for service access
      flows:
        clientCredentials:
          scopes: {}
          tokenUrl: /api/v2/token
      type: oauth2
externalDocs:
  description: Additional API Documentation
  url: https://docs.benchling.com/v2-alpha
info:
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Benchling API
  version: 2.0.0
openapi: 3.0.1
security:
- oAuth: []
- basicApiKeyAuth: []
servers:
- url: /api/v2-alpha
tags:
- description: 'AA Sequences are the working units of cells that make everything run
    (they help make structures, catalyze reactions and allow for signaling - a kind
    of internal cell communication). On Benchling, these are comprised of a string
    of amino acids and collections of other attributes, such as annotations.

    '
  name: AA Sequences
- description: View access policies.
  name: Access Policies
- description: Create and manage Benchling apps on your tenant
  name: Apps
- description: 'In Benchling, Assemblies are records of a process in which many fragment
    sequences are assembled in silico to create new construct sequences.

    '
  name: Assemblies
- description: Export audit log data for Benchling objects.
  name: Audit
- description: Collaborations represent which user or group has which access policies
    assigned to access an item.
  name: Collaborations
- description: 'Benchling supports custom entities for biological entities that are
    neither sequences or proteins. Custom entities must have an entity schema set
    and can have both schema fields and custom fields.

    '
  name: Custom Entities
- description: DNA Oligos are short linear DNA sequences that can be attached as primers
    to full DNA sequences. Just like other entities, they support schemas, tags, and
    aliases.
  name: DNA Oligos
- description: 'DNA sequences are the bread and butter of the Benchling Molecular
    Biology suite. On Benchling, these are comprised of a string of nucleotides and
    collections of other attributes, such as annotations and primers.

    '
  name: DNA Sequences
- description: Entities include DNA and AA sequences, oligos, molecules, custom entities,
    and other biological objects in Benchling. Entities support schemas, tags, and
    aliases, and can be registered.
  name: Entities
- description: Entries are rich text documents that allow you to capture all of your
    experimental data in one place.
  name: Entries
- description: Manage folder objects.
  name: Folders
- description: Forms are custom interfaces for manual data entry
  name: Forms
- description: Lab Automation endpoints support integration with lab instruments,
    and liquid handlers to create samples or results, and capture transfers between
    containers at scale.
  name: Lab Automation
- description: Legacy workflows allow orchestrating complex experiments.
  name: Legacy Workflows
- description: Manage project objects.
  name: Projects
- description: 'Manage registry objects.


    See our documentation on [how to register entities](https://docs.benchling.com/docs/registering-entities).

    '
  name: Registry
- description: 'Results API is an alpha API to create AssayResults in Benchling.  This
    API is meant to replace the AssayResults API in the stable branch.

    '
  name: Results
- description: RNA Oligos are short linear RNA sequences that can be attached as primers
    to full DNA sequences. Just like other entities, they support schemas, tags, and
    aliases.
  name: RNA Oligos
- description: Schemas define properties on benchling objects
  name: Schemas
- description: '

    A study is a set of experiments conducted to answer a specific question in a structured
    way. In Benchling, a study is an object that can be tied to any set of entries,
    entities, containers, and tasks, and a place to write down the purpose of the
    work and track its progress.

    '
  name: Studies
- description: View the Unit Dictionary
  name: Units
- description: Worklists are a convenient way to organize items for bulk actions,
    and are complementary to folders and projects
  name: Worklists
